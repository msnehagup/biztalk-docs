{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Microsoft.BizTalk.ManagementService"
    },
    "host": "localhost",
    "basePath": "/BizTalkManagementService",
    "schemes": [
        "http"
    ],
    "paths": {
        "/Agreements": {
            "get": {
                "tags": [
                    "Agreements"
                ],
                "summary": "Get all agreements",
                "operationId": "Agreements_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Agreements"
                ],
                "summary": "Create an agreement",
                "operationId": "Agreements_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "agreement",
                        "in": "body",
                        "description": "Agreement details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Agreement"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Agreements/{partner1Name}/{partner2Name}": {
            "get": {
                "tags": [
                    "Agreements"
                ],
                "summary": "Get agreements between two partners",
                "operationId": "Agreements_GetAgreementsBetweenPartners",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "partner1Name",
                        "in": "path",
                        "description": "First partner name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "partner2Name",
                        "in": "path",
                        "description": "Second partner name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Agreement"
                            }
                        }
                    }
                }
            }
        },
        "/Agreements/{agreementName}": {
            "get": {
                "tags": [
                    "Agreements"
                ],
                "summary": "Get agreement by name",
                "operationId": "Agreements_GetAgreement",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "Agreement name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Agreement"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Agreements"
                ],
                "summary": "Update an agreement",
                "operationId": "Agreements_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "agreement",
                        "in": "body",
                        "description": "Agreement details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Agreement"
                        }
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The current name of the agreement to update.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Agreements"
                ],
                "summary": "Delete an agreement",
                "operationId": "Agreements_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "Agreement name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Applications": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "GET Applications",
                "operationId": "Applications_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Applications"
                ],
                "summary": "Create an Application",
                "operationId": "Applications_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "application",
                        "in": "body",
                        "description": "Details of Application to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Applications/{applicationName}": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "GET Specific Application",
                "operationId": "Applications_GetApplication",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Applications"
                ],
                "summary": "Update an Application",
                "operationId": "Applications_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Name of Application to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "application",
                        "in": "body",
                        "description": "Details of Application to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Application"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Applications"
                ],
                "summary": "Delete API.",
                "operationId": "Applications_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "The application name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Applications/{applicationName}/Start": {
            "put": {
                "tags": [
                    "Applications"
                ],
                "summary": "Start API.",
                "operationId": "Applications_Start",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "The application name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationStartOptions",
                        "in": "body",
                        "description": "The application start options.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BTApplicationStartOptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Applications/{applicationName}/Stop": {
            "put": {
                "tags": [
                    "Applications"
                ],
                "summary": "Stop API.",
                "operationId": "Applications_Stop",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "he application name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationStopOptions",
                        "in": "body",
                        "description": "The application stop options.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApplicationStopOptions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Batches/{senderParty}/{receiverParty}/{agreementName}": {
            "get": {
                "tags": [
                    "Batches"
                ],
                "summary": "Get batches from one party to another",
                "operationId": "Batches_GetBatches",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BatchDescription"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Batches"
                ],
                "summary": "Create batch.",
                "operationId": "Batches_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "batchDescription",
                        "in": "body",
                        "description": "The batch description.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchDescription"
                        }
                    },
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Batches/{senderParty}/{receiverParty}/{agreementName}/{batchName}": {
            "get": {
                "tags": [
                    "Batches"
                ],
                "summary": "Get a single batch from one party to another",
                "operationId": "Batches_GetBatch",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchName",
                        "in": "path",
                        "description": "The batch name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BatchDescription"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Batches"
                ],
                "summary": "Update batch.",
                "operationId": "Batches_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "batchDescription",
                        "in": "body",
                        "description": "The batch description.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchDescription"
                        }
                    },
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchName",
                        "in": "path",
                        "description": "The batch name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Batches"
                ],
                "summary": "Delete batch.",
                "operationId": "Batches_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchName",
                        "in": "path",
                        "description": "The batch name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Batches/{senderParty}/{receiverParty}/{agreementName}/{batchName}/{controlAction}": {
            "put": {
                "tags": [
                    "Batches"
                ],
                "summary": "Send control message to batch.",
                "operationId": "Batches_SendControlMessage",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchName",
                        "in": "path",
                        "description": "The batch name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "controlAction",
                        "in": "path",
                        "description": "The control command to send to the batch.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "Activate",
                            "Resume",
                            "Override",
                            "Terminate"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "enum": [
                                "ControlMessageProcessed",
                                "ControlMessageAwaitingProcessing",
                                "Unknown"
                            ],
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Batches/{senderParty}/{receiverParty}/{agreementName}/{batchName}/ActivationStatus": {
            "get": {
                "tags": [
                    "Batches"
                ],
                "summary": "Get batch activation status",
                "operationId": "Batches_GetBatchActivationStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "senderParty",
                        "in": "path",
                        "description": "The sender of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiverParty",
                        "in": "path",
                        "description": "The receiver of the agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "agreementName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchName",
                        "in": "path",
                        "description": "The batch name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "enum": [
                                "ControlMessageAwaitingProcessing",
                                "NotActivated",
                                "ActivatedNoActiveOrchestrationFound",
                                "ActivatedOrchestrationNotInstantiated",
                                "ActivatedOrchestrationNotRunning",
                                "ActivatedOrchestrationRunning",
                                "ActivatedOrchestrationSuspended",
                                "ActivatedOrchestrationStatusUnknown",
                                "Unknown"
                            ],
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/BusinessProfiles/{partyName}": {
            "get": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Gets business profiles for a Party",
                "operationId": "BusinessProfiles_GetBusinessProfiles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BusinessProfile"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Creates a business profile for a party",
                "operationId": "BusinessProfiles_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "businessProfile",
                        "in": "body",
                        "description": "The business profile.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BusinessProfile"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/BusinessProfiles/{partyName}/{profileName}": {
            "get": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Get Business profile",
                "operationId": "BusinessProfiles_GetBusinessProfile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "Profile Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/BusinessProfile"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Updates a business profile for a party",
                "operationId": "BusinessProfiles_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "businessProfile",
                        "in": "body",
                        "description": "The business profile.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BusinessProfile"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "Profile name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Deletes a business profile for a party",
                "operationId": "BusinessProfiles_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "Profile name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/BusinessProfiles/Identities/{partyName}/{profileName}": {
            "post": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Create business identity",
                "operationId": "BusinessProfiles_AddBusinessIdentity",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "qualifierIdentity",
                        "in": "body",
                        "description": "Qualifier identity details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QualifierIdentity"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "Profile name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/BusinessProfiles/Identities/{partyName}/{profileName}/{id}": {
            "put": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Update business identity",
                "operationId": "BusinessProfiles_UpdateBusinessIdentity",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "qualifierIdentity",
                        "in": "body",
                        "description": "Qualifier identity details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QualifierIdentity"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "Business profile Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Business profile id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "BusinessProfiles"
                ],
                "summary": "Delete business identity",
                "operationId": "BusinessProfiles_DeleteBusinessIdentity",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "profileName",
                        "in": "path",
                        "description": "Business profile Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Business profile id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/FallbackSettings": {
            "get": {
                "tags": [
                    "FallbackSettings"
                ],
                "summary": "Get all fallback settings",
                "operationId": "FallbackSettings_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FallbackSettings"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "FallbackSettings"
                ],
                "summary": "Update fallback settings",
                "operationId": "FallbackSettings_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "fallbackSettings",
                        "in": "body",
                        "description": "The fallback settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FallbackSettings"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Hosts": {
            "get": {
                "tags": [
                    "Hosts"
                ],
                "summary": "Get hosts",
                "operationId": "Hosts_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Host"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/Instances": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get Instances",
                "operationId": "OperationalData_GetInstances",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Instance"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/Instances/Terminate/{instanceId}": {
            "put": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Terminate instance",
                "operationId": "OperationalData_TerminateInstance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "instanceId",
                        "in": "path",
                        "description": "instance Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/OperationalData/Instances/Resume/{instanceId}": {
            "put": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Resume instance",
                "operationId": "OperationalData_ResumeInstance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "instanceId",
                        "in": "path",
                        "description": "instance Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/OperationalData/Instances/Suspend/{instanceId}": {
            "put": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Suspend instance",
                "operationId": "OperationalData_SuspendInstance",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "parameters": [
                    {
                        "name": "instanceId",
                        "in": "path",
                        "description": "instance Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/OperationalData/Messages": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get Messages",
                "operationId": "OperationalData_GetMessages",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Message"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/Subscriptions": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get Subscriptions",
                "operationId": "OperationalData_GetSubscription",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Subscription"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/TrackedMessageEvents": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get TrackedMessageEvent",
                "operationId": "OperationalData_GetTrackedMessageEvent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TrackedMessageEvent"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/TrackedServiceInstances": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get TrackedServiceInstance",
                "operationId": "OperationalData_GetTrackedServiceInstances",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TrackedServiceInstance"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/TransactionSets": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get TransactionSet",
                "operationId": "OperationalData_GetTransactionSets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionSet"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/TransactionSetAggregationReports": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get TransactionSetAggregationReport",
                "operationId": "OperationalData_GetTransactionSetAggregationReports",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionSetAggregationReport"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/InterchangeStatusRecords": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get InterchangeStatusRecords",
                "operationId": "OperationalData_GetInterchangeStatusRecords",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InterchangeStatusRecord"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/InterchangeAggregationRecords": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get InterchangeAggregationRecords",
                "operationId": "OperationalData_GetInterchangeAggregationRecords",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InterchangeAggregationRecord"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/AS2StatusRecords": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get AS2StatusRecords",
                "operationId": "OperationalData_GetAS2StatusRecords",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AS2StatusRecord"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/Batches": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get Batches",
                "operationId": "OperationalData_GetBatches",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Batch"
                            }
                        }
                    }
                }
            }
        },
        "/OperationalData/Batches/Status/{destinationPartyName}/{batchName}": {
            "get": {
                "tags": [
                    "OperationalData"
                ],
                "summary": "Get batch status",
                "operationId": "OperationalData_GetBatchStatus",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "destinationPartyName",
                        "in": "path",
                        "description": "The destination of the oneway agreement.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "batchName",
                        "in": "path",
                        "description": "The agreement name.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "enum": [
                                "All",
                                "Defined",
                                "Active",
                                "Released",
                                "Completed",
                                "None"
                            ],
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/Orchestrations": {
            "get": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Get all Orchestrations",
                "operationId": "Orchestrations_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Orchestration"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Update Orchestration. Allows us to Bind/Unbind Ports, Host and Change Tracking Options",
                "operationId": "Orchestrations_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "orchestration",
                        "in": "body",
                        "description": "Updated Orchestration Properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Orchestration"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Orchestrations/{applicationName}/{orchestrationName}": {
            "get": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Get Specific Orchestration",
                "operationId": "Orchestrations_GetOrchestration",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Name of application",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orchestrationName",
                        "in": "path",
                        "description": "Name of Orchestration",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Orchestration"
                        }
                    }
                }
            }
        },
        "/Orchestrations/{applicationName}/{orchestrationName}/Enlist": {
            "put": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Enlist Orchestration",
                "operationId": "Orchestrations_EnlistOrchestration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orchestrationName",
                        "in": "path",
                        "description": "Orchestration Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Orchestrations/{applicationName}/{orchestrationName}/Unenlist": {
            "put": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Unenlist Orchestration",
                "operationId": "Orchestrations_UnenlistOrchestration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orchestrationName",
                        "in": "path",
                        "description": "Orchestration Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Orchestrations/{applicationName}/{orchestrationName}/Start": {
            "put": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Start Orchestration",
                "operationId": "Orchestrations_StartOrchestration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orchestrationName",
                        "in": "path",
                        "description": "Orchestration Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Orchestrations/{applicationName}/{orchestrationName}/Stop": {
            "put": {
                "tags": [
                    "Orchestrations"
                ],
                "summary": "Stop Orchestration",
                "operationId": "Orchestrations_StopOrchestration",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orchestrationName",
                        "in": "path",
                        "description": "Orchestration Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Parties": {
            "get": {
                "tags": [
                    "Parties"
                ],
                "summary": "Get Parties",
                "operationId": "Parties_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Party"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Parties"
                ],
                "summary": "Create Party",
                "operationId": "Parties_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "party",
                        "in": "body",
                        "description": "Party details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Party"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Parties/{partyName}": {
            "get": {
                "tags": [
                    "Parties"
                ],
                "summary": "Get Party",
                "operationId": "Parties_GetParty",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "party name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Party"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Parties"
                ],
                "summary": "Update Party",
                "operationId": "Parties_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "party",
                        "in": "body",
                        "description": "Party details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Party"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "party name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Parties"
                ],
                "summary": "Add a party alias",
                "operationId": "Parties_AddPartyAlias",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyAlias",
                        "in": "body",
                        "description": "Party Alias details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartyAlias"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parties"
                ],
                "summary": "Delete Party",
                "operationId": "Parties_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Parties/{partyName}/{partyAliasName}": {
            "put": {
                "tags": [
                    "Parties"
                ],
                "summary": "Update Party alias",
                "operationId": "Parties_UpdatePartyAlias",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyAlias",
                        "in": "body",
                        "description": "party alias details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartyAlias"
                        }
                    },
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "partyAliasName",
                        "in": "path",
                        "description": "Alias Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parties"
                ],
                "summary": "Delete Party alias",
                "operationId": "Parties_DeletePartyAlias",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyName",
                        "in": "path",
                        "description": "Party Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "partyAliasName",
                        "in": "path",
                        "description": "Alias Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Pipelines": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "GET Pipelines",
                "operationId": "Pipelines_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pipeline"
                            }
                        }
                    }
                }
            }
        },
        "/Pipelines/{pipelineName}": {
            "get": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Get Details about a specific Pipeline",
                "operationId": "Pipelines_GetPipeline",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "pipelineName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pipeline"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Pipelines"
                ],
                "summary": "Update Tracking and Description of a Pipeline",
                "operationId": "Pipelines_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "pipelineName",
                        "in": "path",
                        "description": "Name of pipeline to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pipeline",
                        "in": "body",
                        "description": "Pipeline details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pipeline"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Policies": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get Policies",
                "operationId": "Policies_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Policy"
                            }
                        }
                    }
                }
            }
        },
        "/ProtocolTypes": {
            "get": {
                "tags": [
                    "ProtocolTypes"
                ],
                "summary": "Get Protocol types",
                "operationId": "ProtocolTypes_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProtocolType"
                            }
                        }
                    }
                }
            }
        },
        "/ReceiveLocations": {
            "get": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Get Receive Locations",
                "operationId": "ReceiveLocations_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReceiveLocation"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Create Receive Location",
                "operationId": "ReceiveLocations_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "receiveLocation",
                        "in": "body",
                        "description": "Receive location details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReceiveLocation"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceiveLocations/{receivePortName}/{receiveLocationName}": {
            "get": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Get receive location of a receive port",
                "operationId": "ReceiveLocations_GetReceiveLocation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiveLocationName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReceiveLocation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Delete Receive Location",
                "operationId": "ReceiveLocations_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "description": "Receive port name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiveLocationName",
                        "in": "path",
                        "description": "Receive location name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceiveLocations/{receiveLocationName}": {
            "put": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Update Receive Location",
                "operationId": "ReceiveLocations_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "receiveLocation",
                        "in": "body",
                        "description": "Receive location details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReceiveLocation"
                        }
                    },
                    {
                        "name": "receiveLocationName",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceiveLocations/SetPrimary/{receivePortName}/{receiveLocationName}": {
            "put": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Set primary receive location",
                "operationId": "ReceiveLocations_SetPrimary",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "description": "Receive port name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiveLocationName",
                        "in": "path",
                        "description": "Receive location name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceiveLocations/Enable/{receivePortName}/{receiveLocationName}": {
            "put": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Enable receive location",
                "operationId": "ReceiveLocations_Enable",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "description": "Receive port name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiveLocationName",
                        "in": "path",
                        "description": "Receive location name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceiveLocations/Disable/{receivePortName}/{receiveLocationName}": {
            "put": {
                "tags": [
                    "ReceiveLocations"
                ],
                "summary": "Disable receive location",
                "operationId": "ReceiveLocations_Disable",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "description": "Receive port name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "receiveLocationName",
                        "in": "path",
                        "description": "Receive location name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceivePorts": {
            "get": {
                "tags": [
                    "ReceivePorts"
                ],
                "summary": "Get Receive Ports",
                "operationId": "ReceivePorts_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReceivePort"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ReceivePorts"
                ],
                "summary": "Create Receive Port",
                "operationId": "ReceivePorts_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "receiveport",
                        "in": "body",
                        "description": "Receive port details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReceivePort"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ReceivePorts/{receivePortName}": {
            "get": {
                "tags": [
                    "ReceivePorts"
                ],
                "summary": "Get Receive Ports",
                "operationId": "ReceivePorts_GetReceivePort",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReceivePort"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ReceivePorts"
                ],
                "summary": "Update Receive port",
                "operationId": "ReceivePorts_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "receiveport",
                        "in": "body",
                        "description": "Receive port details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReceivePort"
                        }
                    },
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "description": "ReceivePort Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ReceivePorts"
                ],
                "summary": "Delete Receive port",
                "operationId": "ReceivePorts_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "receivePortName",
                        "in": "path",
                        "description": "ReceivePort Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Resources": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "GET Resources",
                "operationId": "Resources_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Resource"
                            }
                        }
                    }
                }
            }
        },
        "/RoleLinks": {
            "get": {
                "tags": [
                    "RoleLinks"
                ],
                "summary": "Get Role links",
                "operationId": "RoleLinks_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RoleLink"
                            }
                        }
                    }
                }
            }
        },
        "/RoleLinks/{applicationName}/{roleLinkName}": {
            "get": {
                "tags": [
                    "RoleLinks"
                ],
                "summary": "Get Role link",
                "operationId": "RoleLinks_GetRoleLink",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "applicationName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roleLinkName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RoleLink"
                        }
                    }
                }
            }
        },
        "/RoleLinks/AddEnlistedParties/{applicationName}/{roleLinkName}": {
            "put": {
                "tags": [
                    "RoleLinks"
                ],
                "summary": "Add an enlisted party",
                "operationId": "RoleLinks_AddEnlistedParties",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "enlistedParties",
                        "in": "body",
                        "description": "list of Enlisted party details",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EnlistedParty"
                            }
                        }
                    },
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roleLinkName",
                        "in": "path",
                        "description": "Role link name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/RoleLinks/RemoveEnlistedParties/{applicationName}/{roleLinkName}": {
            "put": {
                "tags": [
                    "RoleLinks"
                ],
                "summary": "remove an enlisted party",
                "operationId": "RoleLinks_RemoveEnlistedParties",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "partyNames",
                        "in": "body",
                        "description": "List of party names",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "applicationName",
                        "in": "path",
                        "description": "Application name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "roleLinkName",
                        "in": "path",
                        "description": "Role link name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Schemas": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "GET Schemas.",
                "operationId": "Schemas_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Schema"
                            }
                        }
                    }
                }
            }
        },
        "/Schemas/{schemaName}": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "GET a schemas by name.",
                "operationId": "Schemas_GetSchema",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "schemaName",
                        "in": "path",
                        "description": "Name of the schema.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Schemas"
                ],
                "summary": "Update Schema (only tracking options and description)",
                "operationId": "Schemas_UpdateTracking",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "schemaName",
                        "in": "path",
                        "description": "Schema Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "schema",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPortGroups": {
            "get": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Get SendportGroups",
                "operationId": "SendPortGroups_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SendPortGroup"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Create SendPortGroup",
                "operationId": "SendPortGroups_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroup",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SendPortGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPortGroups/{sendPortGroupName}": {
            "get": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Get specific SendPortGroup",
                "operationId": "SendPortGroups_GetSendPortGroup",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "Name of SendPortGroup",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SendPortGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Update specific SendPortGroup",
                "operationId": "SendPortGroups_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroup",
                        "in": "body",
                        "description": "Details of SendPortGroup",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SendPortGroup"
                        }
                    },
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "SendPortGroup Name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Delete SendPortGroup",
                "operationId": "SendPortGroups_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPortGroups/{sendPortGroupName}/Unenlist": {
            "put": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Unenlist SendportGroup",
                "operationId": "SendPortGroups_UnenlistSendPortGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "Send port Group name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPortGroups/{sendPortGroupName}/Start": {
            "put": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Start Sendport Group",
                "operationId": "SendPortGroups_StartSendPortGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "Send port Group name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPortGroups/{sendPortGroupName}/Stop": {
            "put": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Stop Sendport Group",
                "operationId": "SendPortGroups_StopSendPortGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "Send port Group name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPortGroups/{sendPortGroupName}/Enlist": {
            "put": {
                "tags": [
                    "SendPortGroups"
                ],
                "summary": "Enlist Sendport Group",
                "operationId": "SendPortGroups_EnlistSendPortGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortGroupName",
                        "in": "path",
                        "description": "Send port Group name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPorts": {
            "get": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Get Sendports",
                "operationId": "SendPorts_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SendPort"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Create a send port",
                "operationId": "SendPorts_Create",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "btSendPort",
                        "in": "body",
                        "description": "Send port details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SendPort"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPorts/{sendPortName}": {
            "get": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Get Sendport",
                "operationId": "SendPorts_GetSendPort",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SendPort"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Update Sendport",
                "operationId": "SendPorts_Update",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "btSendPort",
                        "in": "body",
                        "description": "Send port details",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SendPort"
                        }
                    },
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Delete send port",
                "operationId": "SendPorts_Delete",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPorts/{sendPortName}/Unenlist": {
            "put": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Unenlist Sendport",
                "operationId": "SendPorts_UnenlistSendPort",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPorts/{sendPortName}/Start": {
            "put": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Start Sendport",
                "operationId": "SendPorts_StartSendPort",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPorts/{sendPortName}/Stop": {
            "put": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Stop Sendport",
                "operationId": "SendPorts_StopSendPort",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/SendPorts/{sendPortName}/Enlist": {
            "put": {
                "tags": [
                    "SendPorts"
                ],
                "summary": "Enlist Sendport",
                "operationId": "SendPorts_EnlistSendPort",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "sendPortName",
                        "in": "path",
                        "description": "Send port name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/Transforms": {
            "get": {
                "tags": [
                    "Transforms"
                ],
                "summary": "Get all maps",
                "operationId": "Transforms_Get",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transform"
                            }
                        }
                    }
                }
            }
        },
        "/Transforms/{transformFullName}": {
            "get": {
                "tags": [
                    "Transforms"
                ],
                "summary": "Get details about a specific transform",
                "operationId": "Transforms_GetTransform",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "transformFullName",
                        "in": "path",
                        "description": "Full name of the transform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Transform"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Transforms"
                ],
                "summary": "Update Transform. Only Description can be edited.",
                "operationId": "Transforms_Put",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "transformFullName",
                        "in": "path",
                        "description": "Transform full name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transform",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Transform"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "Agreement": {
            "description": "Model for Agreement",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "Protocol": {
                    "description": "Gets or sets the protocol.",
                    "type": "string"
                },
                "Enabled": {
                    "description": "Gets or sets a value indicating whether enabled.",
                    "type": "boolean"
                },
                "StartDate": {
                    "format": "date-time",
                    "description": "Gets or sets the start date.",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "description": "Gets or sets the end date.",
                    "type": "string"
                },
                "SendPartner": {
                    "$ref": "#/definitions/PartnerAgreementContext",
                    "description": "Gets or sets the send partner."
                },
                "ReceivePartner": {
                    "$ref": "#/definitions/PartnerAgreementContext",
                    "description": "Gets or sets the receive partner."
                },
                "AgreementContent": {
                    "$ref": "#/definitions/AgreementContent",
                    "description": "Gets or sets the agreement content."
                },
                "CustomSettings": {
                    "description": "Gets or sets the custom settings.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomSetting"
                    }
                },
                "Contacts": {
                    "description": "Gets or sets the contacts.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }
            }
        },
        "PartnerAgreementContext": {
            "description": "Model for PartnerAgreementContext",
            "type": "object",
            "properties": {
                "PartnerName": {
                    "description": "Gets or sets the partner.",
                    "type": "string"
                },
                "ProfileName": {
                    "description": "Gets or sets the profile.",
                    "type": "string"
                }
            }
        },
        "AgreementContent": {
            "description": "The agreement content.",
            "type": "object",
            "properties": {
                "AS2AgreementContent": {
                    "$ref": "#/definitions/AS2AgreementContent",
                    "description": "Gets or sets the AS2 agreement content."
                },
                "X12AgreementContent": {
                    "$ref": "#/definitions/X12AgreementContent",
                    "description": "Gets or sets the X12 agreement content."
                },
                "EDIFACTAgreementContent": {
                    "$ref": "#/definitions/EDIFACTAgreementContent",
                    "description": "Gets or sets the EDIFACT agreement content."
                }
            }
        },
        "CustomSetting": {
            "description": "Party Custom setting",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Setting Name",
                    "type": "string"
                },
                "Value": {
                    "description": "Setting value",
                    "type": "string"
                }
            }
        },
        "Contact": {
            "description": "Model for Contact",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Company": {
                    "description": "Gets or sets the company.",
                    "type": "string"
                },
                "JobTitle": {
                    "description": "Gets or sets the job title.",
                    "type": "string"
                },
                "Email": {
                    "description": "Gets or sets the email.",
                    "type": "string"
                },
                "WebAddress": {
                    "description": "Gets or sets the web address.",
                    "type": "string"
                },
                "BusinessPhone": {
                    "description": "Gets or sets the business phone.",
                    "type": "string"
                },
                "MobilePhone": {
                    "description": "Gets or sets the mobile phone.",
                    "type": "string"
                },
                "Fax": {
                    "description": "Gets or sets the fax.",
                    "type": "string"
                },
                "Address": {
                    "description": "Gets or sets the address.",
                    "type": "string"
                },
                "Notes": {
                    "description": "Gets or sets the notes.",
                    "type": "string"
                }
            }
        },
        "AS2AgreementContent": {
            "description": "Model for AS2 protocol settings in an agreement",
            "type": "object",
            "properties": {
                "SendAgreement": {
                    "$ref": "#/definitions/AS2OnewayAgreement",
                    "description": "Gets or sets the send agreement."
                },
                "ReceiveAgreement": {
                    "$ref": "#/definitions/AS2OnewayAgreement",
                    "description": "Gets or sets the receive agreement."
                }
            }
        },
        "X12AgreementContent": {
            "description": "Model for X12 protocol settings in an agreement",
            "type": "object",
            "properties": {
                "SendAgreement": {
                    "$ref": "#/definitions/X12OnewayAgreement",
                    "description": "Gets or sets the send agreement."
                },
                "ReceiveAgreement": {
                    "$ref": "#/definitions/X12OnewayAgreement",
                    "description": "Gets or sets the receive agreement."
                }
            }
        },
        "EDIFACTAgreementContent": {
            "description": "Model for EDIFACT protocol settings in an agreement",
            "type": "object",
            "properties": {
                "SendAgreement": {
                    "$ref": "#/definitions/EDIFACTOnewayAgreement",
                    "description": "Gets or sets the send agreement."
                },
                "ReceiveAgreement": {
                    "$ref": "#/definitions/EDIFACTOnewayAgreement",
                    "description": "Gets or sets the receive agreement."
                }
            }
        },
        "AS2OnewayAgreement": {
            "description": "Model for AS2 Oneway Agreement",
            "type": "object",
            "properties": {
                "ProtocolSettings": {
                    "$ref": "#/definitions/AS2ProtocolSettings",
                    "description": "Gets or sets the protocol settings."
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "SenderBusinessIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the sender business identity."
                },
                "ReceiveBusinessIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the receive business identity."
                },
                "SendPortNames": {
                    "description": "Gets or sets the send port references.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "BatchDescriptions": {
                    "description": "Gets or sets the batch descriptions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchDescription"
                    }
                }
            }
        },
        "X12OnewayAgreement": {
            "description": "Model for X12 Oneway Agreement",
            "type": "object",
            "properties": {
                "ProtocolSettings": {
                    "$ref": "#/definitions/X12ProtocolSettings",
                    "description": "Gets or sets the protocol settings."
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "SenderBusinessIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the sender business identity."
                },
                "ReceiveBusinessIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the receive business identity."
                },
                "SendPortNames": {
                    "description": "Gets or sets the send port references.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "BatchDescriptions": {
                    "description": "Gets or sets the batch descriptions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchDescription"
                    }
                }
            }
        },
        "EDIFACTOnewayAgreement": {
            "description": "Model for EDIFACT Oneway Agreement",
            "type": "object",
            "properties": {
                "ProtocolSettings": {
                    "$ref": "#/definitions/EDIFACTProtocolSettings",
                    "description": "Gets or sets the protocol settings."
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "SenderBusinessIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the sender business identity."
                },
                "ReceiveBusinessIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the receive business identity."
                },
                "SendPortNames": {
                    "description": "Gets or sets the send port references.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "BatchDescriptions": {
                    "description": "Gets or sets the batch descriptions.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchDescription"
                    }
                }
            }
        },
        "AS2ProtocolSettings": {
            "description": "Model for AS2 protocol settings in an agreement",
            "type": "object",
            "properties": {
                "MessageConnectionSettings": {
                    "$ref": "#/definitions/AS2MessageConnectionSettings",
                    "description": "Gets or sets the message connection settings."
                },
                "ValidationSettings": {
                    "$ref": "#/definitions/AS2ValidationSettings",
                    "description": "Gets or sets the validation settings."
                },
                "ErrorSettings": {
                    "$ref": "#/definitions/AS2ErrorSettings",
                    "description": "Gets or sets the error settings."
                },
                "MDNSettings": {
                    "$ref": "#/definitions/AS2MDNSettings",
                    "description": "Gets or sets the mdn settings."
                },
                "EnvelopeSettings": {
                    "$ref": "#/definitions/AS2EnvelopeSettings",
                    "description": "Gets or sets the envelope settings."
                },
                "SecuritySettings": {
                    "$ref": "#/definitions/AS2SecuritySettings",
                    "description": "Gets or sets the security settings."
                },
                "AcknowledgmentConnectionSettings": {
                    "$ref": "#/definitions/AS2AcknowledgmentConnectionSettings",
                    "description": "Gets or sets the Acknowledgment connection settings."
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "ProtocolName": {
                    "description": "Gets or sets the protocol name.",
                    "type": "string"
                },
                "SettingsName": {
                    "description": "Gets or sets the settings name.",
                    "type": "string"
                }
            }
        },
        "QualifierIdentity": {
            "description": "Model for QualifierIdentity",
            "type": "object",
            "properties": {
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "Qualifier": {
                    "description": "Gets or sets the qualifier.",
                    "type": "string"
                },
                "Value": {
                    "description": "Gets or sets the value.",
                    "type": "string"
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                }
            }
        },
        "BatchDescription": {
            "description": "Model for BatchDescription",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int64",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "Protocol": {
                    "description": "Gets or sets the protocol.",
                    "type": "string"
                },
                "StartDate": {
                    "format": "date-time",
                    "description": "Gets or sets the start date.",
                    "type": "string"
                },
                "EndDate": {
                    "format": "date-time",
                    "description": "Gets or sets the end date.",
                    "type": "string"
                },
                "TerminationCount": {
                    "format": "int32",
                    "description": "Gets or sets the termination count.",
                    "type": "integer"
                },
                "Filter": {
                    "$ref": "#/definitions/FilterPredicate",
                    "description": "Gets or sets the filter predicate."
                },
                "MessageCountRelease": {
                    "$ref": "#/definitions/MessageCountReleaseCriteria",
                    "description": "Gets or sets the message count release criteria"
                },
                "ManualRelease": {
                    "$ref": "#/definitions/ManualReleaseCriteria",
                    "description": "Gets or sets the manual release criteria"
                },
                "InterchangeSizeRelease": {
                    "$ref": "#/definitions/InterchangeSizeReleaseCriteria",
                    "description": "Gets or sets the interchange size release criteria"
                },
                "TimeBasedRelease": {
                    "$ref": "#/definitions/TimeBasedReleaseCriteria",
                    "description": "Gets or sets the time-based release criteria"
                }
            }
        },
        "X12ProtocolSettings": {
            "description": "Model for X12 protocol settings in an agreement",
            "type": "object",
            "properties": {
                "ValidationSettings": {
                    "$ref": "#/definitions/X12ValidationSettings",
                    "description": "Gets or sets the validation settings."
                },
                "FramingSettings": {
                    "$ref": "#/definitions/X12FramingSettings",
                    "description": "Gets or sets the framing settings."
                },
                "EnvelopeSettings": {
                    "$ref": "#/definitions/X12EnvelopeSettings",
                    "description": "Gets or sets the envelope settings."
                },
                "AcknowledgmentSettings": {
                    "$ref": "#/definitions/X12AcknowledgmentSettings",
                    "description": "Gets or sets the Acknowledgment settings."
                },
                "MessageFilter": {
                    "$ref": "#/definitions/X12MessageFilter",
                    "description": "Gets or sets the message filter."
                },
                "SecuritySettings": {
                    "$ref": "#/definitions/X12SecuritySettings",
                    "description": "Gets or sets the security settings."
                },
                "ProcessingSettings": {
                    "$ref": "#/definitions/X12ProcessingSettings",
                    "description": "Gets or sets the processing settings."
                },
                "SchemaSettings": {
                    "$ref": "#/definitions/X12SchemaSettings",
                    "description": "Gets or sets the schema settings."
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "ProtocolName": {
                    "description": "Gets or sets the protocol name.",
                    "type": "string"
                },
                "SettingsName": {
                    "description": "Gets or sets the settings name.",
                    "type": "string"
                }
            }
        },
        "EDIFACTProtocolSettings": {
            "description": "Model for EDIFACT protocol settings in an agreement",
            "type": "object",
            "properties": {
                "ValidationSettings": {
                    "$ref": "#/definitions/EDIFACTValidationSettings",
                    "description": "Gets or sets the validation settings."
                },
                "FramingSettings": {
                    "$ref": "#/definitions/EDIFACTFramingSettings",
                    "description": "Gets or sets the framing settings."
                },
                "EnvelopeSettings": {
                    "$ref": "#/definitions/EDIFACTEnvelopeSettings",
                    "description": "Gets or sets the envelope settings."
                },
                "AcknowledgmentSettings": {
                    "$ref": "#/definitions/EDIFACTAcknowledgmentSettings",
                    "description": "Gets or sets the Acknowledgment settings."
                },
                "MessageFilter": {
                    "$ref": "#/definitions/EDIFACTMessageFilter",
                    "description": "Gets or sets the message filter."
                },
                "ProcessingSettings": {
                    "$ref": "#/definitions/EDIFACTProcessingSettings",
                    "description": "Gets or sets the processing settings."
                },
                "SchemaSettings": {
                    "$ref": "#/definitions/EDIFACTSchemaSettings",
                    "description": "Gets or sets the processing settings."
                },
                "IsTestInterchange": {
                    "description": "Gets or sets a value indicating whether is test interchange.",
                    "type": "boolean"
                },
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "ProtocolName": {
                    "description": "Gets or sets the protocol name.",
                    "type": "string"
                },
                "SettingsName": {
                    "description": "Gets or sets the settings name.",
                    "type": "string"
                }
            }
        },
        "AS2MessageConnectionSettings": {
            "description": "Model for AS2MessageConnectionSettings",
            "type": "object",
            "properties": {
                "IgnoreCertificateNameMismatch": {
                    "description": "Gets or sets a value indicating whether ignore certificate name mismatch.",
                    "type": "boolean"
                },
                "HttpExpect100ContinueSupported": {
                    "description": "Gets or sets a value indicating whether http expect 100 continue supported.",
                    "type": "boolean"
                },
                "KeepHttpConnectionAlive": {
                    "description": "Gets or sets a value indicating whether keep http connection alive.",
                    "type": "boolean"
                },
                "UnfoldHttpHeaders": {
                    "description": "Gets or sets a value indicating whether unfold http headers.",
                    "type": "boolean"
                }
            }
        },
        "AS2ValidationSettings": {
            "description": "Model for AS2ValidationSettings",
            "type": "object",
            "properties": {
                "MessageEncrypted": {
                    "description": "Gets or sets a value indicating whether message encrypted.",
                    "type": "boolean"
                },
                "MessageSigned": {
                    "description": "Gets or sets a value indicating whether message signed.",
                    "type": "boolean"
                },
                "MessageCompressed": {
                    "description": "Gets or sets a value indicating whether message compressed.",
                    "type": "boolean"
                },
                "EncryptionAlgorithm": {
                    "description": "Gets or sets the encryption algorithm.",
                    "type": "string"
                },
                "CheckCertificateRevocationListOnSend": {
                    "description": "Gets or sets a value indicating whether check certificate revocation list on send.",
                    "type": "boolean"
                },
                "CheckCertificateRevocationListOnReceive": {
                    "description": "Gets or sets a value indicating whether check certificate revocation list on receive.",
                    "type": "boolean"
                },
                "CheckDuplicateMessage": {
                    "description": "Gets or sets a value indicating whether check duplicate message.",
                    "type": "boolean"
                },
                "InterchangeDuplicatesValidity": {
                    "format": "int32",
                    "description": "Gets or sets the interchange duplicates validity.",
                    "type": "integer"
                },
                "OverrideMessageProperties": {
                    "description": "Gets or sets a value indicating whether to override message properties.",
                    "type": "boolean"
                }
            }
        },
        "AS2ErrorSettings": {
            "description": "Model for AS2ErrorSettings",
            "type": "object",
            "properties": {
                "SuspendDuplicateMessage": {
                    "description": "Gets or sets a value indicating whether suspend duplicate message.",
                    "type": "boolean"
                },
                "ResendIfMDNNotReceived": {
                    "description": "Gets or sets a value indicating whether resend if mdn not received.",
                    "type": "boolean"
                },
                "MaxResendAttempts": {
                    "format": "int32",
                    "description": "Gets or sets the max resend attempts.",
                    "type": "integer"
                },
                "ResendTimeout": {
                    "description": "Gets or sets the resend timeout.",
                    "type": "string"
                },
                "HttpRetryTimeout": {
                    "description": "Gets or sets the http retry timeout.",
                    "type": "string"
                },
                "OverrideSendPort": {
                    "description": "Gets or sets a value indicating whether override send port.",
                    "type": "boolean"
                },
                "MinimumHttpRetryInterval": {
                    "description": "Gets or sets the minimum http retry interval.",
                    "type": "string"
                },
                "MaximumHttpRetryAttempts": {
                    "format": "int32",
                    "description": "Gets or sets the maximum http retry attempts.",
                    "type": "integer"
                },
                "MinimumResendInterval": {
                    "description": "Gets or sets the minimum resend interval.",
                    "type": "string"
                }
            }
        },
        "AS2MDNSettings": {
            "description": "Model for AS2MDNSettings",
            "type": "object",
            "properties": {
                "ProcessMDNtoMsgBox": {
                    "description": "Gets or sets a value indicating whether to process mdn to msg box.",
                    "type": "boolean"
                },
                "NeedMDN": {
                    "description": "Gets or sets a value indicating whether mdn is needed.",
                    "type": "boolean"
                },
                "SignMDN": {
                    "description": "Gets or sets a value indicating whether to sign mdn.",
                    "type": "boolean"
                },
                "SendMDNAsynchronously": {
                    "description": "Gets or sets a value indicating whether to send mdn asynchronously.",
                    "type": "boolean"
                },
                "ReceiptDeliveryUrl": {
                    "description": "Gets or sets the receipt delivery url.",
                    "type": "string"
                },
                "DispositionNotificationTo": {
                    "description": "Gets or sets the disposition notification to.",
                    "type": "string"
                },
                "SignOutboundMDNIfOptional": {
                    "description": "Gets or sets a value indicating whether sign outbound mdn if optional.",
                    "type": "boolean"
                },
                "MDNText": {
                    "description": "Gets or sets the mdn text.",
                    "type": "string"
                },
                "MicHashingAlgorithm": {
                    "description": "Gets or sets the mic hashing algorithm.",
                    "type": "string"
                }
            }
        },
        "AS2EnvelopeSettings": {
            "description": "Model for AS2EnvelopeSettings",
            "type": "object",
            "properties": {
                "TransmitFileNameInMimeHeader": {
                    "description": "Gets or sets a value indicating whether transmit file name in mime header.",
                    "type": "boolean"
                },
                "FileNameTemplate": {
                    "description": "Gets or sets the file name template.",
                    "type": "string"
                },
                "SuspendMessageOnFileNameGenerationError": {
                    "description": "Gets or sets a value indicating whether suspend message on file name generation error.",
                    "type": "boolean"
                },
                "AutogenerateFileName": {
                    "description": "Gets or sets a value indicating whether autogenerate file name.",
                    "type": "boolean"
                },
                "MessageContentType": {
                    "description": "Gets or sets the message content type.",
                    "type": "string"
                }
            }
        },
        "AS2SecuritySettings": {
            "description": "Model for AS2SecuritySettings",
            "type": "object",
            "properties": {
                "OverrideGroupSigningCertificate": {
                    "description": "Gets or sets a value indicating whether override group signing certificate.",
                    "type": "boolean"
                },
                "SigningCertificateName": {
                    "description": "Gets or sets the signing certificate name.",
                    "type": "string"
                },
                "SigningCertificateThumbprint": {
                    "description": "Gets or sets the signing certificate thumbprint.",
                    "type": "string"
                },
                "EnableNRRForInboundEncodedMessages": {
                    "description": "Gets or sets a value indicating whether enable nrr for inbound encoded messages.",
                    "type": "boolean"
                },
                "EnableNRRForInboundDecodedMessages": {
                    "description": "Gets or sets a value indicating whether enable nrr for inbound decoded messages.",
                    "type": "boolean"
                },
                "EnableNRRForOutboundMDN": {
                    "description": "Gets or sets a value indicating whether enable nrr for outbound mdn.",
                    "type": "boolean"
                },
                "EnableNRRForOutboundEncodedMessages": {
                    "description": "Gets or sets a value indicating whether enable nrr for outbound encoded messages.",
                    "type": "boolean"
                },
                "EnableNRRForOutboundDecodedMessages": {
                    "description": "Gets or sets a value indicating whether enable nrr for outbound decoded messages.",
                    "type": "boolean"
                },
                "EnableNRRForInboundMDN": {
                    "description": "Gets or sets a value indicating whether enable nrr for inbound mdn.",
                    "type": "boolean"
                }
            }
        },
        "AS2AcknowledgmentConnectionSettings": {
            "description": "Model for AS2AcknowledgmentConnectionSettings",
            "type": "object",
            "properties": {
                "AckIgnoreCertificateNameMismatch": {
                    "description": "Gets or sets a value indicating whether ack ignore certificate name mismatch.",
                    "type": "boolean"
                },
                "AckHttpExpect100Continue": {
                    "description": "Gets or sets a value indicating whether ack http expect 100 continue.",
                    "type": "boolean"
                },
                "AckKeepHttpConnectionAlive": {
                    "description": "Gets or sets a value indicating whether ack keep http connection alive.",
                    "type": "boolean"
                },
                "AckUnfoldHttpHeaders": {
                    "description": "Gets or sets a value indicating whether ack unfold http headers.",
                    "type": "boolean"
                }
            }
        },
        "FilterPredicate": {
            "description": "Model for FilterGroup",
            "type": "object",
            "properties": {
                "Groups": {
                    "description": "Gets or sets the groups.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterGroup"
                    }
                }
            }
        },
        "MessageCountReleaseCriteria": {
            "description": "Model for MessageCountReleaseCriteria",
            "type": "object",
            "properties": {
                "MessageScope": {
                    "description": "Gets or sets the message scope.",
                    "type": "string"
                },
                "MessageCount": {
                    "format": "int32",
                    "description": "Gets or sets the message count.",
                    "type": "integer"
                }
            }
        },
        "ManualReleaseCriteria": {
            "description": "Model for ManualReleaseCriteria",
            "type": "object",
            "properties": {}
        },
        "InterchangeSizeReleaseCriteria": {
            "description": "Model for InterchangeSizeReleaseCriteria",
            "type": "object",
            "properties": {
                "CharacterCount": {
                    "format": "int64",
                    "description": "Gets or sets the character count.",
                    "type": "integer"
                }
            }
        },
        "TimeBasedReleaseCriteria": {
            "description": "Model for TimeBasedReleaseCriteria",
            "type": "object",
            "properties": {
                "WeeklyRecurrence": {
                    "$ref": "#/definitions/WeeklyRecurrence",
                    "description": "Gets or sets the recurrence schedule."
                },
                "HourlyRecurrence": {
                    "$ref": "#/definitions/HourlyRecurrence",
                    "description": "Gets or sets the recurrence schedule."
                },
                "DailyRecurrence": {
                    "$ref": "#/definitions/DailyRecurrence",
                    "description": "Gets or sets the recurrence schedule."
                },
                "FirstRelease": {
                    "format": "date-time",
                    "description": "Gets or sets the first release datetime.",
                    "type": "string"
                },
                "SendEmptyBatchSignal": {
                    "description": "Gets or sets a value indicating whether send empty batch signal.",
                    "type": "boolean"
                }
            }
        },
        "X12ValidationSettings": {
            "description": "Model for X12ValidationSettings",
            "type": "object",
            "properties": {
                "ValidateCharacterSet": {
                    "description": "Gets or sets a value indicating whether to validate character set in the message.",
                    "type": "boolean"
                },
                "CheckDuplicateInterchangeControlNumber": {
                    "description": "Gets or sets a value indicating whether to check for duplicate interchange control number.",
                    "type": "boolean"
                },
                "InterchangeControlNumberValidityPeriod": {
                    "format": "int32",
                    "description": "Gets or sets the validity period of interchange control number.",
                    "type": "integer"
                },
                "CheckDuplicateGroupControlNumber": {
                    "description": "Gets or sets a value indicating whether to check for duplicate group control number.",
                    "type": "boolean"
                },
                "CheckDuplicateTransactionSetControlNumber": {
                    "description": "Gets or sets a value indicating whether to check for duplicate transaction set control number.",
                    "type": "boolean"
                },
                "ValidateEDITypes": {
                    "description": "Gets or sets a value indicating whether to Whether to validate EDI types.",
                    "type": "boolean"
                },
                "ValidateXSDTypes": {
                    "description": "Gets or sets a value indicating whether to Whether to validate XSD types.",
                    "type": "boolean"
                },
                "AllowLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to allow leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "TrimLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to trim leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "TrailingSeparatorPolicy": {
                    "description": "Gets or sets the trailing separator policy.",
                    "type": "string"
                },
                "ValidationOverrides": {
                    "description": "Gets or sets the schema overrides.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X12ValidationOverrides"
                    }
                }
            }
        },
        "X12FramingSettings": {
            "description": "Model for X12FramingSettings",
            "type": "object",
            "properties": {
                "DataElementSeparator": {
                    "format": "int32",
                    "description": "Gets or sets the data element separator.",
                    "type": "integer"
                },
                "ComponentSeparator": {
                    "format": "int32",
                    "description": "Gets or sets the component separator.",
                    "type": "integer"
                },
                "ReplaceSeparatorsInPayload": {
                    "description": "Gets or sets a value indicating whether to replace separators in payload.",
                    "type": "boolean"
                },
                "ReplaceCharacter": {
                    "format": "int32",
                    "description": "Gets or sets the replacement character.",
                    "type": "integer"
                },
                "SegmentTerminator": {
                    "format": "int32",
                    "description": "Gets or sets the segment terminator.",
                    "type": "integer"
                },
                "CharacterSet": {
                    "description": "Gets or sets the X12 character set.",
                    "type": "string"
                },
                "SegmentTerminatorSuffix": {
                    "description": "Gets or sets the segment terminator suffix.",
                    "type": "string"
                }
            }
        },
        "X12EnvelopeSettings": {
            "description": "Model for X12EnvelopeSettings",
            "type": "object",
            "properties": {
                "ControlStandardsId": {
                    "format": "int32",
                    "description": "Gets or sets the controls standards id.",
                    "type": "integer"
                },
                "UseControlStandardsIdAsRepetitionCharacter": {
                    "description": "Gets or sets a value indicating whether to use control standards id as repetition character.",
                    "type": "boolean"
                },
                "SenderApplicationId": {
                    "description": "Gets or sets the sender application id.",
                    "type": "string"
                },
                "ReceiverApplicationId": {
                    "description": "Gets or sets the receiver application id.",
                    "type": "string"
                },
                "ControlVersionNumber": {
                    "description": "Gets or sets the control version number.",
                    "type": "string"
                },
                "InterchangeControlNumberLowerBound": {
                    "format": "int32",
                    "description": "Gets or sets the interchange control number lower bound",
                    "type": "integer"
                },
                "InterchangeControlNumberUpperBound": {
                    "format": "int32",
                    "description": "Gets or sets the interchange  control number upper bound.",
                    "type": "integer"
                },
                "InterchangeControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover interchange control number.",
                    "type": "boolean"
                },
                "EnableDefaultGroupHeaders": {
                    "description": "Gets or sets a value indicating whether to enable default group headers.",
                    "type": "boolean"
                },
                "FunctionalGroupId": {
                    "description": "Gets or sets the functional group id.",
                    "type": "string"
                },
                "GroupControlNumberLowerBound": {
                    "format": "int32",
                    "description": "Gets or sets the group control number lower bound.",
                    "type": "integer"
                },
                "GroupControlNumberUpperBound": {
                    "format": "int32",
                    "description": "Gets or sets the group control number upper bound.",
                    "type": "integer"
                },
                "GroupControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover group control number.",
                    "type": "boolean"
                },
                "GroupHeaderAgencyCode": {
                    "description": "Gets or sets the group header agency code.",
                    "type": "string"
                },
                "GroupHeaderVersion": {
                    "description": "Gets or sets the group header version.",
                    "type": "string"
                },
                "TransactionSetControlNumberLowerBound": {
                    "format": "int32",
                    "description": "Gets or sets the transaction set control number lower bound.",
                    "type": "integer"
                },
                "TransactionSetControlNumberUpperBound": {
                    "format": "int32",
                    "description": "Gets or sets the transaction set control number upper bound.",
                    "type": "integer"
                },
                "TransactionSetControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover transaction set control number.",
                    "type": "boolean"
                },
                "TransactionSetControlNumberPrefix": {
                    "description": "Gets or sets the transaction set control number prefix.",
                    "type": "string"
                },
                "TransactionSetControlNumberSuffix": {
                    "description": "Gets or sets the transaction set control number suffix.",
                    "type": "string"
                },
                "OverwriteExistingTransactionSetControlNumber": {
                    "description": "Gets or sets a value indicating whether to overwrite existing transaction set control number",
                    "type": "boolean"
                },
                "GroupHeaderDateFormat": {
                    "description": "Gets or sets the group header date format.",
                    "type": "string"
                },
                "GroupHeaderTimeFormat": {
                    "description": "Gets or sets the group header time format.",
                    "type": "string"
                },
                "UsageIndicator": {
                    "description": "Gets or sets the usage indicator.",
                    "type": "string"
                },
                "EnvelopeOverrides": {
                    "description": "Gets or sets the envelope overrides.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X12EnvelopeOverrides"
                    }
                }
            }
        },
        "X12AcknowledgmentSettings": {
            "description": "Model for X12AcknowledgmentSettings",
            "type": "object",
            "properties": {
                "NeedTechnicalAcknowledgment": {
                    "description": "Gets or sets a value indicating whether technical acknowledgment is needed.",
                    "type": "boolean"
                },
                "BatchTechnicalAcknowledgments": {
                    "description": "Gets or sets a value indicating whether to batch the technical Acknowledgments.",
                    "type": "boolean"
                },
                "NeedFunctionalAcknowledgment": {
                    "description": "Gets or sets a value indicating whether functional Acknowledgment is needed.",
                    "type": "boolean"
                },
                "FunctionalAcknowledgmentVersion": {
                    "description": "Gets or sets the functional Acknowledgment version.",
                    "type": "string"
                },
                "BatchFunctionalAcknowledgments": {
                    "description": "Gets or sets a value indicating whether to batch functional Acknowledgments.",
                    "type": "boolean"
                },
                "NeedImplementationAcknowledgment": {
                    "description": "Gets or sets a value indicating whether implementation Acknowledgment is needed.",
                    "type": "boolean"
                },
                "ImplementationAcknowledgmentVersion": {
                    "description": "Gets or sets the implementation Acknowledgment version.",
                    "type": "string"
                },
                "BatchImplementationAcknowledgments": {
                    "description": "Gets or sets a value indicating whether to batch implementation Acknowledgments.",
                    "type": "boolean"
                },
                "NeedLoopForValidMessages": {
                    "description": "Gets or sets a value indicating whether a loop is needed for valid messages.",
                    "type": "boolean"
                },
                "SendSynchronousAcknowledgment": {
                    "description": "Gets or sets a value indicating whether to send synchronous Acknowledgment.",
                    "type": "boolean"
                },
                "AcknowledgmentControlNumberPrefix": {
                    "description": "Gets or sets the Acknowledgment control number prefix.",
                    "type": "string"
                },
                "AcknowledgmentControlNumberSuffix": {
                    "description": "Gets or sets the Acknowledgment control number suffix.",
                    "type": "string"
                },
                "AcknowledgmentControlNumberLowerBound": {
                    "format": "int32",
                    "description": "Gets or sets the Acknowledgment control number lower bound.",
                    "type": "integer"
                },
                "AcknowledgmentControlNumberUpperBound": {
                    "format": "int32",
                    "description": "Gets or sets the Acknowledgment control number upper bound.",
                    "type": "integer"
                },
                "AcknowledgmentControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover Acknowledgment control number",
                    "type": "boolean"
                },
                "GeneratePatAK901": {
                    "description": "Gets or sets a value indicating whether generate pat a k 901.",
                    "type": "boolean"
                }
            }
        },
        "X12MessageFilter": {
            "description": "Model for X12MessageFilter",
            "type": "object",
            "properties": {
                "MessageFilterType": {
                    "description": "Gets or sets the message filter type.",
                    "type": "string"
                },
                "FilterMessages": {
                    "description": "Gets or sets the filter messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X12MessageIdentifier"
                    }
                }
            }
        },
        "X12SecuritySettings": {
            "description": "Model for X12SecuritySettings",
            "type": "object",
            "properties": {
                "AuthorizationQualifier": {
                    "description": "Gets or sets the authorization qualifier.",
                    "type": "string"
                },
                "AuthorizationValue": {
                    "description": "Gets or sets the authorization value.",
                    "type": "string"
                },
                "SecurityQualifier": {
                    "description": "Gets or sets the security qualifier.",
                    "type": "string"
                },
                "PasswordValue": {
                    "description": "Gets or sets the password value.",
                    "type": "string"
                }
            }
        },
        "X12ProcessingSettings": {
            "description": "Model for X12ProcessingSettings",
            "type": "object",
            "properties": {
                "MaskSecurityInfo": {
                    "description": "Gets or sets a value indicating whether to mask security information.",
                    "type": "boolean"
                },
                "ConvertImpliedDecimal": {
                    "description": "Gets or sets a value indicating whether to convert numerical type to implied decimal.",
                    "type": "boolean"
                },
                "PreserveInterchange": {
                    "description": "Gets or sets a value indicating whether to preserve interchange.",
                    "type": "boolean"
                },
                "SuspendInterchangeOnError": {
                    "description": "Gets or sets a value indicating whether to suspend interchange on error.",
                    "type": "boolean"
                },
                "CreateEmptyXmlTagsForTrailingSeparators": {
                    "description": "Gets or sets a value indicating whether to create empty xml tags for trailing separators.",
                    "type": "boolean"
                }
            }
        },
        "X12SchemaSettings": {
            "description": "Model for X12SchemaSettings",
            "type": "object",
            "properties": {
                "TargetNamespace": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                },
                "SchemaOverrides": {
                    "description": "Gets or sets the schema overrides.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X12SchemaOverrides"
                    }
                }
            }
        },
        "EDIFACTValidationSettings": {
            "description": "Model for EDIFACTValidationSettings",
            "type": "object",
            "properties": {
                "ValidateCharacterSet": {
                    "description": "Gets or sets a value indicating whether to validate character set in the message.",
                    "type": "boolean"
                },
                "CheckDuplicateInterchangeControlNumber": {
                    "description": "Gets or sets a value indicating whether to check for duplicate interchange control number.",
                    "type": "boolean"
                },
                "InterchangeControlNumberValidityPeriod": {
                    "format": "int32",
                    "description": "Gets or sets the validity period of interchange control number.",
                    "type": "integer"
                },
                "CheckDuplicateGroupControlNumber": {
                    "description": "Gets or sets a value indicating whether to check for duplicate group control number.",
                    "type": "boolean"
                },
                "CheckDuplicateTransactionSetControlNumber": {
                    "description": "Gets or sets a value indicating whether to check for duplicate transaction set control number.",
                    "type": "boolean"
                },
                "ValidateEDITypes": {
                    "description": "Gets or sets a value indicating whether to Whether to validate EDI types.",
                    "type": "boolean"
                },
                "ValidateXSDTypes": {
                    "description": "Gets or sets a value indicating whether to Whether to validate XSD types.",
                    "type": "boolean"
                },
                "AllowLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to allow leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "TrimLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to trim leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "TrailingSeparatorPolicy": {
                    "description": "Gets or sets the trailing separator policy.",
                    "type": "string"
                },
                "ValidationOverrides": {
                    "description": "Gets or sets the schema overrides.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EDIFACTValidationOverrides"
                    }
                }
            }
        },
        "EDIFACTFramingSettings": {
            "description": "Model for EDIFACTFramingSettings",
            "type": "object",
            "properties": {
                "ServiceCodeListDirectoryVersion": {
                    "description": "Gets or sets the service code list directory version.",
                    "type": "string"
                },
                "CharacterEncoding": {
                    "description": "Gets or sets the character encoding.",
                    "type": "string"
                },
                "ProtocolVersion": {
                    "format": "int32",
                    "description": "Gets or sets the protocol version.",
                    "type": "integer"
                },
                "DataElementSeparator": {
                    "format": "int32",
                    "description": "Gets or sets the data element separator.",
                    "type": "integer"
                },
                "ComponentSeparator": {
                    "format": "int32",
                    "description": "Gets or sets the component separator.",
                    "type": "integer"
                },
                "SegmentTerminator": {
                    "format": "int32",
                    "description": "Gets or sets the segment terminator.",
                    "type": "integer"
                },
                "ReleaseIndicator": {
                    "format": "int32",
                    "description": "Gets or sets the release indicator.",
                    "type": "integer"
                },
                "RepetitionSeparator": {
                    "format": "int32",
                    "description": "Gets or sets the repetition separator.",
                    "type": "integer"
                },
                "CharacterSet": {
                    "description": "Gets or sets the EDIFACT character set.",
                    "type": "string"
                },
                "DecimalPointIndicator": {
                    "description": "Gets or sets the decimal point indicator.",
                    "type": "string"
                },
                "SegmentTerminatorSuffix": {
                    "description": "Gets or sets the segment terminator suffix.",
                    "type": "string"
                }
            }
        },
        "EDIFACTEnvelopeSettings": {
            "description": "Model for EDIFACTEnvelopeSettings",
            "type": "object",
            "properties": {
                "ApplicationReferenceId": {
                    "description": "Gets or sets the application reference id.",
                    "type": "string"
                },
                "ApplyDelimiterStringAdvice": {
                    "description": "Gets or sets a value indicating whether apply delimiter string advice.",
                    "type": "boolean"
                },
                "CommunicationAgreementId": {
                    "description": "Gets or sets the communication agreement id.",
                    "type": "string"
                },
                "CreateGroupingSegments": {
                    "description": "Gets or sets a value indicating whether create grouping segments.",
                    "type": "boolean"
                },
                "GroupApplicationPassword": {
                    "description": "Gets or sets the group application password.",
                    "type": "string"
                },
                "GroupApplicationReceiverId": {
                    "description": "Gets or sets the group application receiver id.",
                    "type": "string"
                },
                "GroupApplicationReceiverQualifier": {
                    "description": "Gets or sets the group application receiver qualifier.",
                    "type": "string"
                },
                "GroupApplicationSenderId": {
                    "description": "Gets or sets the group application sender id.",
                    "type": "string"
                },
                "GroupApplicationSenderQualifier": {
                    "description": "Gets or sets the group application sender qualifier.",
                    "type": "string"
                },
                "GroupAssociationAssignedCode": {
                    "description": "Gets or sets the group association assigned code.",
                    "type": "string"
                },
                "GroupControllingAgencyCode": {
                    "description": "Gets or sets the group controlling agency code.",
                    "type": "string"
                },
                "GroupControlNumberPrefix": {
                    "description": "Gets or sets the group control number prefix.",
                    "type": "string"
                },
                "GroupControlNumberSuffix": {
                    "description": "Gets or sets the group control number suffix.",
                    "type": "string"
                },
                "GroupMessageRelease": {
                    "description": "Gets or sets the group message release.",
                    "type": "string"
                },
                "GroupMessageVersion": {
                    "description": "Gets or sets the group message version.",
                    "type": "string"
                },
                "InterchangeControlNumberPrefix": {
                    "description": "Gets or sets the interchange control number prefix.",
                    "type": "string"
                },
                "InterchangeControlNumberSuffix": {
                    "description": "Gets or sets the interchange control number suffix.",
                    "type": "string"
                },
                "IsTestInterchange": {
                    "description": "Gets or sets a value indicating whether is test interchange.",
                    "type": "boolean"
                },
                "ProcessingPriorityCode": {
                    "description": "Gets or sets the processing priority code.",
                    "type": "string"
                },
                "ReceiverInternalIdentification": {
                    "description": "Gets or sets the receiver internal identification.",
                    "type": "string"
                },
                "ReceiverInternalSubIdentification": {
                    "description": "Gets or sets the receiver internal sub identification.",
                    "type": "string"
                },
                "ReceiverReverseRoutingAddress": {
                    "description": "Gets or sets the receiver reverse routing address.",
                    "type": "string"
                },
                "RecipientReferencePasswordQualifier": {
                    "description": "Gets or sets the recipient reference password qualifier.",
                    "type": "string"
                },
                "RecipientReferencePasswordValue": {
                    "description": "Gets or sets the recipient reference password value.",
                    "type": "string"
                },
                "SenderInternalIdentification": {
                    "description": "Gets or sets the sender internal identification.",
                    "type": "string"
                },
                "SenderInternalSubIdentification": {
                    "description": "Gets or sets the sender internal sub identification.",
                    "type": "string"
                },
                "SenderReverseRoutingAddress": {
                    "description": "Gets or sets the sender reverse routing address.",
                    "type": "string"
                },
                "InterchangeControlNumberLowerBound": {
                    "format": "int64",
                    "description": "Gets or sets the interchange control number lower bound",
                    "type": "integer"
                },
                "InterchangeControlNumberUpperBound": {
                    "format": "int64",
                    "description": "Gets or sets the interchange  control number upper bound.",
                    "type": "integer"
                },
                "InterchangeControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover interchange control number.",
                    "type": "boolean"
                },
                "EnableDefaultGroupHeaders": {
                    "description": "Gets or sets a value indicating whether to enable default group headers.",
                    "type": "boolean"
                },
                "FunctionalGroupId": {
                    "description": "Gets or sets the functional group id.",
                    "type": "string"
                },
                "GroupControlNumberLowerBound": {
                    "format": "int64",
                    "description": "Gets or sets the group control number lower bound.",
                    "type": "integer"
                },
                "GroupControlNumberUpperBound": {
                    "format": "int64",
                    "description": "Gets or sets the group control number upper bound.",
                    "type": "integer"
                },
                "GroupControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover group control number.",
                    "type": "boolean"
                },
                "TransactionSetControlNumberLowerBound": {
                    "format": "int64",
                    "description": "Gets or sets the transaction set control number lower bound.",
                    "type": "integer"
                },
                "TransactionSetControlNumberUpperBound": {
                    "format": "int64",
                    "description": "Gets or sets the transaction set control number upper bound.",
                    "type": "integer"
                },
                "TransactionSetControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover transaction set control number.",
                    "type": "boolean"
                },
                "TransactionSetControlNumberPrefix": {
                    "description": "Gets or sets the transaction set control number prefix.",
                    "type": "string"
                },
                "TransactionSetControlNumberSuffix": {
                    "description": "Gets or sets the transaction set control number suffix.",
                    "type": "string"
                },
                "OverwriteExistingTransactionSetControlNumber": {
                    "description": "Gets or sets a value indicating whether to overwrite existing transaction set control number",
                    "type": "boolean"
                },
                "EnvelopeOverrides": {
                    "description": "Gets or sets the envelope overrides.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EDIFACTEnvelopeOverrides"
                    }
                }
            }
        },
        "EDIFACTAcknowledgmentSettings": {
            "description": "Model for EDIFACTAcknowledgmentSettings",
            "type": "object",
            "properties": {
                "NeedTechnicalAcknowledgment": {
                    "description": "Gets or sets a value indicating whether technical acknowledgment is needed.",
                    "type": "boolean"
                },
                "BatchTechnicalAcknowledgments": {
                    "description": "Gets or sets a value indicating whether to batch the technical Acknowledgments.",
                    "type": "boolean"
                },
                "NeedFunctionalAcknowledgment": {
                    "description": "Gets or sets a value indicating whether functional Acknowledgment is needed.",
                    "type": "boolean"
                },
                "BatchFunctionalAcknowledgments": {
                    "description": "Gets or sets a value indicating whether to batch functional Acknowledgments.",
                    "type": "boolean"
                },
                "NeedLoopForValidMessages": {
                    "description": "Gets or sets a value indicating whether a loop is needed for valid messages.",
                    "type": "boolean"
                },
                "SendSynchronousAcknowledgment": {
                    "description": "Gets or sets a value indicating whether to send synchronous Acknowledgment.",
                    "type": "boolean"
                },
                "AcknowledgmentControlNumberPrefix": {
                    "description": "Gets or sets the Acknowledgment control number prefix.",
                    "type": "string"
                },
                "AcknowledgmentControlNumberSuffix": {
                    "description": "Gets or sets the Acknowledgment control number suffix.",
                    "type": "string"
                },
                "AcknowledgmentControlNumberLowerBound": {
                    "format": "int64",
                    "description": "Gets or sets the Acknowledgment control number lower bound.",
                    "type": "integer"
                },
                "AcknowledgmentControlNumberUpperBound": {
                    "format": "int64",
                    "description": "Gets or sets the Acknowledgment control number upper bound.",
                    "type": "integer"
                },
                "AcknowledgmentControlNumberRollover": {
                    "description": "Gets or sets a value indicating whether to rollover Acknowledgment control number",
                    "type": "boolean"
                }
            }
        },
        "EDIFACTMessageFilter": {
            "description": "Model for EDIFACTMessageFilter",
            "type": "object",
            "properties": {
                "MessageFilterType": {
                    "description": "Gets or sets the message filter type.",
                    "type": "string"
                },
                "FilterMessages": {
                    "description": "Gets or sets the filter messages.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EDIFACTMessageIdentifier"
                    }
                }
            }
        },
        "EDIFACTProcessingSettings": {
            "description": "Model for EDIFACTProcessingSettings",
            "type": "object",
            "properties": {
                "MaskSecurityInfo": {
                    "description": "Gets or sets a value indicating whether to mask security information.",
                    "type": "boolean"
                },
                "PreserveInterchange": {
                    "description": "Gets or sets a value indicating whether to preserve interchange.",
                    "type": "boolean"
                },
                "SuspendInterchangeOnError": {
                    "description": "Gets or sets a value indicating whether to suspend interchange on error.",
                    "type": "boolean"
                },
                "CreateEmptyXmlTagsForTrailingSeparators": {
                    "description": "Gets or sets a value indicating whether to create empty xml tags for trailing separators.",
                    "type": "boolean"
                },
                "UseDotAsDecimalSeparator": {
                    "description": "Gets or sets a value indicating whether to use dot as decimal separator.",
                    "type": "boolean"
                }
            }
        },
        "EDIFACTSchemaSettings": {
            "description": "Model for EDIFACTSchemaSettings",
            "type": "object",
            "properties": {
                "TargetNamespace": {
                    "description": "Gets or sets the target namespace.",
                    "type": "string"
                },
                "SchemaOverrides": {
                    "description": "Gets or sets the schema overrides.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EDIFACTSchemaOverrides"
                    }
                }
            }
        },
        "FilterGroup": {
            "description": "Model for FilterGroup",
            "type": "object",
            "properties": {
                "Statements": {
                    "description": "Gets or sets the statements.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterStatement"
                    }
                }
            }
        },
        "WeeklyRecurrence": {
            "description": "Model for WeeklyRecurrence",
            "type": "object",
            "properties": {
                "WeekDays": {
                    "description": "Gets or sets the week days.",
                    "type": "string"
                },
                "RecurrencePeriod": {
                    "description": "Gets or sets the recurrence period.",
                    "type": "string"
                }
            }
        },
        "HourlyRecurrence": {
            "description": "Model for HourlyRecurrence",
            "type": "object",
            "properties": {
                "Hours": {
                    "format": "int32",
                    "description": "Gets or sets the hours.",
                    "type": "integer"
                },
                "Minutes": {
                    "format": "int32",
                    "description": "Gets or sets the minutes.",
                    "type": "integer"
                },
                "RecurrencePeriod": {
                    "description": "Gets or sets the recurrence period.",
                    "type": "string"
                }
            }
        },
        "DailyRecurrence": {
            "description": "Model for DailyRecurrence",
            "type": "object",
            "properties": {
                "Days": {
                    "format": "int32",
                    "description": "Gets or sets the days.",
                    "type": "integer"
                },
                "RecurrencePeriod": {
                    "description": "Gets or sets the recurrence period.",
                    "type": "string"
                }
            }
        },
        "X12ValidationOverrides": {
            "description": "Model for X12ValidationOverride",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id on which the validation settings has to be applied.",
                    "type": "string"
                },
                "ValidateEDITypes": {
                    "description": "Gets or sets a value indicating whether to validate EDI types.",
                    "type": "boolean"
                },
                "ValidateXSDTypes": {
                    "description": "Gets or sets a value indicating whether to validate XSD types.",
                    "type": "boolean"
                },
                "AllowLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to allow leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "ValidateCharacterSet": {
                    "description": "Gets or sets a value indicating whether to validate character Set.",
                    "type": "boolean"
                },
                "TrimLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to trim leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "TrailingSeparatorPolicy": {
                    "description": "Gets or sets the trailing separator policy.",
                    "type": "string"
                }
            }
        },
        "X12EnvelopeOverrides": {
            "description": "Model for X12EnvelopeOverride",
            "type": "object",
            "properties": {
                "TargetNamespace": {
                    "description": "Gets or sets the target namespace on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "TargetNamespaceString": {
                    "description": "Gets or sets the target namespace string on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "ProtocolVersion": {
                    "description": "Gets or sets the protocol version on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "MessageId": {
                    "description": "Gets or sets the message id on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "ResponsibleAgencyCode": {
                    "description": "Gets or sets the responsible agency code.",
                    "type": "string"
                },
                "HeaderVersion": {
                    "description": "Gets or sets the header version.",
                    "type": "string"
                },
                "SenderApplicationId": {
                    "description": "Gets or sets the sender application id.",
                    "type": "string"
                },
                "ReceiverApplicationId": {
                    "description": "Gets or sets the receiver application id.",
                    "type": "string"
                },
                "FunctionalIdentifierCode": {
                    "description": "Gets or sets the functional identifier code.",
                    "type": "string"
                },
                "DateFormat": {
                    "description": "Gets or sets the date format.",
                    "type": "string"
                },
                "TimeFormat": {
                    "description": "Gets or sets the time format.",
                    "type": "string"
                }
            }
        },
        "X12MessageIdentifier": {
            "description": "Model for X12MessageIdentifier",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                }
            }
        },
        "X12SchemaOverrides": {
            "description": "Model for X12SchemaReference",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                },
                "SenderApplicationId": {
                    "description": "Gets or sets the sender application id.",
                    "type": "string"
                },
                "TargetNamespace": {
                    "description": "Gets or sets the target namespace.",
                    "type": "string"
                }
            }
        },
        "EDIFACTValidationOverrides": {
            "description": "Model for EDIFACTValidationOverride",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id on which the validation settings has to be applied.",
                    "type": "string"
                },
                "ValidateEDITypes": {
                    "description": "Gets or sets a value indicating whether to validate EDI types.",
                    "type": "boolean"
                },
                "ValidateXSDTypes": {
                    "description": "Gets or sets a value indicating whether to validate XSD types.",
                    "type": "boolean"
                },
                "AllowLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to allow leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "EnforceCharacterSet": {
                    "description": "Gets or sets a value indicating whether to enforce character Set.",
                    "type": "boolean"
                },
                "TrimLeadingAndTrailingSpacesAndZeroes": {
                    "description": "Gets or sets a value indicating whether to trim leading and trailing spaces and zeroes.",
                    "type": "boolean"
                },
                "TrailingSeparatorPolicy": {
                    "description": "Gets or sets the trailing separator policy.",
                    "type": "string"
                },
                "InternalTrailingSeparatorPolicy": {
                    "format": "int32",
                    "description": "Gets or sets the internal trailing separator policy.",
                    "type": "integer"
                }
            }
        },
        "EDIFACTEnvelopeOverrides": {
            "description": "Model for EDIFACTEnvelopeOverride",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "MessageVersion": {
                    "description": "Gets or sets the message version on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "MessageRelease": {
                    "description": "Gets or sets the message release version on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "MessageAssociationAssignedCode": {
                    "description": "Gets or sets the message association assigned code.",
                    "type": "string"
                },
                "TargetNamespace": {
                    "description": "Gets or sets the target namespace on which this envelope settings has to be applied.",
                    "type": "string"
                },
                "FunctionalGroupId": {
                    "description": "Gets or sets the functional group id.",
                    "type": "string"
                },
                "SenderApplicationQualifier": {
                    "description": "Gets or sets the sender application qualifier.",
                    "type": "string"
                },
                "SenderApplicationId": {
                    "description": "Gets or sets the sender application id.",
                    "type": "string"
                },
                "ReceiverApplicationQualifier": {
                    "description": "Gets or sets the receiver application qualifier.",
                    "type": "string"
                },
                "ReceiverApplicationId": {
                    "description": "Gets or sets the receiver application id.",
                    "type": "string"
                },
                "ControllingAgencyCode": {
                    "description": "Gets or sets the controlling agency code.",
                    "type": "string"
                },
                "GroupHeaderMessageVersion": {
                    "description": "Gets or sets the group header message version.",
                    "type": "string"
                },
                "GroupHeaderMessageRelease": {
                    "description": "Gets or sets the group header message release.",
                    "type": "string"
                },
                "AssociationAssignedCode": {
                    "description": "Gets or sets the association assigned code.",
                    "type": "string"
                },
                "ApplicationPassword": {
                    "description": "Gets or sets the application password.",
                    "type": "string"
                }
            }
        },
        "EDIFACTMessageIdentifier": {
            "description": "Model for EDIFACTMessageIdentifier",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                }
            }
        },
        "EDIFACTSchemaOverrides": {
            "description": "Model for EDIFACTSchemaReference",
            "type": "object",
            "properties": {
                "MessageId": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                },
                "MessageVersion": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                },
                "MessageRelease": {
                    "description": "Gets or sets the message id.",
                    "type": "string"
                },
                "ApplicationSenderID": {
                    "description": "Gets or sets the application sender id.",
                    "type": "string"
                },
                "ApplicationSenderQualifier": {
                    "description": "Gets or sets the application sender qualifier.",
                    "type": "string"
                },
                "AssociationAssignedCode": {
                    "description": "Gets or sets the association assigned code.",
                    "type": "string"
                },
                "TargetNamespace": {
                    "description": "Gets or sets the target namespace.",
                    "type": "string"
                }
            }
        },
        "FilterStatement": {
            "description": "Model for FilterStatement",
            "type": "object",
            "properties": {
                "Property": {
                    "description": "Gets or sets the property.",
                    "type": "string"
                },
                "Operator": {
                    "description": "Gets or sets the operator.",
                    "type": "string"
                },
                "Value": {
                    "description": "Gets or sets the value.",
                    "type": "string"
                }
            }
        },
        "Application": {
            "description": "Model for Application",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Application Name",
                    "type": "string"
                },
                "Description": {
                    "description": "Application Description",
                    "type": "string"
                },
                "IsDefaultApplication": {
                    "description": "Indicates if this Application is the Default Application",
                    "type": "boolean"
                },
                "IsSystem": {
                    "description": "Is System",
                    "type": "boolean"
                },
                "Status": {
                    "description": "Application Status",
                    "type": "string"
                },
                "IsConfigured": {
                    "description": "Is Configured",
                    "type": "boolean"
                },
                "ApplicationReferences": {
                    "description": "List of Application to which this application has references",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ApplicationBackReferences": {
                    "description": "List of Application that have a reference to this application",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "BTApplicationStartOptions": {
            "description": "Model for BTApplication Start Options",
            "type": "object",
            "properties": {
                "StartAllOrchestrations": {
                    "description": "Start all orchestrations",
                    "type": "boolean"
                },
                "StartAllSendPorts": {
                    "description": "Start all Send Ports",
                    "type": "boolean"
                },
                "StartAllSendPortGroups": {
                    "description": "Start all Send Port Groups",
                    "type": "boolean"
                },
                "EnableAllReceiveLocations": {
                    "description": "Enable all Receive Locations",
                    "type": "boolean"
                },
                "DeployAllPolicies": {
                    "description": "Deploy All Policies",
                    "type": "boolean"
                },
                "StartReferencedApplications": {
                    "description": "Start Referenced Applications",
                    "type": "boolean"
                }
            }
        },
        "ApplicationStopOptions": {
            "description": "Model for Stop Options for BTApplication",
            "type": "object",
            "properties": {
                "UnenlistAllOrchestrations": {
                    "description": "Unenlist all Orchestrations",
                    "type": "boolean"
                },
                "UnenlistAllSendPorts": {
                    "description": "Unenlist all Send Ports",
                    "type": "boolean"
                },
                "UnenlistAllSendPortGroups": {
                    "description": "Unenlist all Send Port Groups",
                    "type": "boolean"
                },
                "DisableAllReceiveLocations": {
                    "description": "Disable all Receive Locations",
                    "type": "boolean"
                },
                "UndeployAllPolicies": {
                    "description": "Undeploy all policies",
                    "type": "boolean"
                },
                "StopReferencedApplications": {
                    "description": "Stop Referenced Applications",
                    "type": "boolean"
                },
                "SuspendRunningInstances": {
                    "description": "Suspend Running Instances",
                    "type": "boolean"
                }
            }
        },
        "BusinessProfile": {
            "description": "Model for BusinessProfile",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "BusinessIdentities": {
                    "description": "Gets or sets the business identities.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QualifierIdentity"
                    }
                },
                "CustomSettings": {
                    "description": "Gets or sets the custom settings.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomSetting"
                    }
                }
            }
        },
        "FallbackSettings": {
            "description": "Model for Fallback Settings",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "ProtocolName": {
                    "description": "Gets or sets the protocol name.",
                    "type": "string"
                },
                "Enabled": {
                    "description": "Gets or sets a value indicating whether enabled.",
                    "type": "boolean"
                },
                "ReceiverIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the receiver identity."
                },
                "SenderIdentity": {
                    "$ref": "#/definitions/QualifierIdentity",
                    "description": "Gets or sets the sender identity."
                },
                "X12FallbackProtocolSettings": {
                    "$ref": "#/definitions/X12ProtocolSettings",
                    "description": "Gets or sets the X12 fallback protocol settings."
                },
                "EDIFACTFallbackProtocolSettings": {
                    "$ref": "#/definitions/EDIFACTProtocolSettings",
                    "description": "Gets or sets the EDIFACT fallback protocol settings."
                },
                "BizTalkHostSettings": {
                    "$ref": "#/definitions/BizTalkHostSettings",
                    "description": "Gets or sets the biz talk host settings."
                }
            }
        },
        "BizTalkHostSettings": {
            "description": "Model for Fallback Settings",
            "type": "object",
            "properties": {
                "EnableStatusReporting": {
                    "description": "Gets or sets a value indicating whether status reporting is enabled.",
                    "type": "boolean"
                },
                "LogErrorsToEventLog": {
                    "description": "Gets or sets a value indicating whether to log errors to event log.",
                    "type": "boolean"
                },
                "LogWarningsToEventLog": {
                    "description": "Gets or sets a value indicating whether to log warnings to event log.",
                    "type": "boolean"
                },
                "StoreMessagePayload": {
                    "description": "Gets or sets a value indicating whether to store message payload",
                    "type": "boolean"
                }
            }
        },
        "Host": {
            "description": "The host.",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Host Name",
                    "type": "string"
                },
                "IsDefault": {
                    "description": "Flag that indicates if host is default host",
                    "type": "boolean"
                },
                "NTGroupName": {
                    "description": "NT group Name",
                    "type": "string"
                },
                "Type": {
                    "description": "Host type",
                    "type": "string"
                },
                "IsTrusted": {
                    "description": "Flag that indicates if host is trusted",
                    "type": "boolean"
                }
            }
        },
        "Instance": {
            "description": "The instance.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id",
                    "type": "string"
                },
                "Class": {
                    "description": "Class",
                    "type": "string",
                    "readOnly": true
                },
                "CreationTime": {
                    "format": "date-time",
                    "description": "Creation Time",
                    "type": "string",
                    "readOnly": true
                },
                "ErrorDescription": {
                    "description": "Error Description",
                    "type": "string",
                    "readOnly": true
                },
                "HostName": {
                    "description": "Host Name",
                    "type": "string",
                    "readOnly": true
                },
                "InstanceStatus": {
                    "description": "Instance Status",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceType": {
                    "description": "Service Type",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceTypeID": {
                    "format": "uuid",
                    "description": "ServiceType Id",
                    "type": "string",
                    "readOnly": true
                },
                "Application": {
                    "description": "Application",
                    "type": "string",
                    "readOnly": true
                },
                "ErrorCode": {
                    "description": "Error Code",
                    "type": "string",
                    "readOnly": true
                },
                "PendingOperation": {
                    "description": "Pending Operation",
                    "type": "string",
                    "readOnly": true
                },
                "MessageBoxServer": {
                    "description": "MessageBox Server",
                    "type": "string",
                    "readOnly": true
                },
                "MessageBoxDb": {
                    "description": "MessageBox database",
                    "type": "string",
                    "readOnly": true
                },
                "ProcessingServer": {
                    "description": "Processing Server",
                    "type": "string",
                    "readOnly": true
                },
                "SuspendTime": {
                    "format": "date-time",
                    "description": "Suspend Time",
                    "type": "string",
                    "readOnly": true
                },
                "Adapter": {
                    "description": "Adapter",
                    "type": "string",
                    "readOnly": true
                },
                "Uri": {
                    "description": "Uri",
                    "type": "string",
                    "readOnly": true
                },
                "PendingJobSubmitTime": {
                    "format": "date-time",
                    "description": "Pending Job Submit Time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Message": {
            "description": "The message.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id",
                    "type": "string",
                    "readOnly": true
                },
                "Adapter": {
                    "description": "Adapter",
                    "type": "string",
                    "readOnly": true
                },
                "CreationTime": {
                    "format": "date-time",
                    "description": "Creation Time",
                    "type": "string",
                    "readOnly": true
                },
                "HostName": {
                    "description": "Host Name",
                    "type": "string",
                    "readOnly": true
                },
                "MessageBoxDB": {
                    "description": "MessageBox DB",
                    "type": "string",
                    "readOnly": true
                },
                "MessageBoxServer": {
                    "description": "MessageBox Server",
                    "type": "string",
                    "readOnly": true
                },
                "MessageID": {
                    "format": "uuid",
                    "description": "Message ID",
                    "type": "string",
                    "readOnly": true
                },
                "MessageType": {
                    "description": "Message Type",
                    "type": "string",
                    "readOnly": true
                },
                "OriginatorPartyName": {
                    "description": "Originator Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "OriginatorSecurityName": {
                    "description": "Originator Security Name",
                    "type": "string",
                    "readOnly": true
                },
                "RetryCount": {
                    "format": "int32",
                    "description": "Retry Count",
                    "type": "integer",
                    "readOnly": true
                },
                "ServiceClass": {
                    "description": "Service Class",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceInstanceID": {
                    "format": "uuid",
                    "description": "Service Instance ID",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceName": {
                    "description": "Service Name",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceStatus": {
                    "description": "Service Status",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceTypeID": {
                    "format": "uuid",
                    "description": "Service Type ID",
                    "type": "string",
                    "readOnly": true
                },
                "Status": {
                    "description": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "Submitter": {
                    "description": "Submitter",
                    "type": "string",
                    "readOnly": true
                },
                "URI": {
                    "description": "URI",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Subscription": {
            "description": "Subscription.",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id",
                    "type": "string",
                    "readOnly": true
                },
                "Name": {
                    "description": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceName": {
                    "description": "ServiceName",
                    "type": "string",
                    "readOnly": true
                },
                "State": {
                    "description": "State",
                    "type": "object",
                    "readOnly": true
                },
                "SubscriptionType": {
                    "description": "Subscription Type",
                    "type": "object",
                    "readOnly": true
                },
                "ServiceInstanceId": {
                    "description": "Service Instance Id",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceClass": {
                    "description": "Service Class",
                    "type": "object",
                    "readOnly": true
                },
                "CreationTime": {
                    "format": "date-time",
                    "description": "Creation Time",
                    "type": "string",
                    "readOnly": true
                },
                "HostName": {
                    "description": "Host Name",
                    "type": "string",
                    "readOnly": true
                },
                "StartWindow": {
                    "format": "date-time",
                    "description": "Start Window",
                    "type": "string",
                    "readOnly": true
                },
                "EndWindow": {
                    "format": "date-time",
                    "description": "End Window",
                    "type": "string",
                    "readOnly": true
                },
                "ValidTime": {
                    "format": "date-time",
                    "description": "Valid Time",
                    "type": "string",
                    "readOnly": true
                },
                "OrderedDelivery": {
                    "description": "Ordered Delivery",
                    "type": "string",
                    "readOnly": true
                },
                "RequestResponse": {
                    "description": "RequestResponse",
                    "type": "string",
                    "readOnly": true
                },
                "Priority": {
                    "format": "int32",
                    "description": "Priority",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "TrackedMessageEvent": {
            "description": "TrackedMessageEvent",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id",
                    "type": "string"
                },
                "EventType": {
                    "description": "Event Type",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceName": {
                    "description": "Service Name",
                    "type": "string",
                    "readOnly": true
                },
                "Adapter": {
                    "description": "Adapter",
                    "type": "string",
                    "readOnly": true
                },
                "Uri": {
                    "description": "Uri",
                    "type": "string",
                    "readOnly": true
                },
                "SchemaName": {
                    "description": "Schema Name",
                    "type": "string",
                    "readOnly": true
                },
                "PortName": {
                    "description": "Port Name",
                    "type": "string",
                    "readOnly": true
                },
                "TimeStamp": {
                    "format": "date-time",
                    "description": "TimeStamp",
                    "type": "string",
                    "readOnly": true
                },
                "PartCount": {
                    "format": "int32",
                    "description": "Part Count",
                    "type": "integer",
                    "readOnly": true
                },
                "Size": {
                    "format": "int64",
                    "description": "Size",
                    "type": "integer",
                    "readOnly": true
                },
                "DecryptionCertificate": {
                    "description": "Decryption Certificate",
                    "type": "string",
                    "readOnly": true
                },
                "Signature": {
                    "description": "Signature",
                    "type": "string",
                    "readOnly": true
                },
                "PartyName": {
                    "description": "Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "ActivityId": {
                    "format": "uuid",
                    "description": "Activity Id",
                    "type": "string",
                    "readOnly": true
                },
                "MessageInstanceId": {
                    "format": "uuid",
                    "description": "Message Instance Id",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceInstanceId": {
                    "format": "uuid",
                    "description": "Service Instance Id",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceClassId": {
                    "format": "uuid",
                    "description": "Service Class Id",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceClass": {
                    "description": "ServiceClass",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TrackedServiceInstance": {
            "description": "TrackedServiceInstance",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "uuid",
                    "description": "Id",
                    "type": "string"
                },
                "ServiceName": {
                    "description": "Service Name",
                    "type": "string",
                    "readOnly": true
                },
                "HostName": {
                    "description": "Host Name",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceClass": {
                    "description": "Service Class",
                    "type": "string",
                    "readOnly": true
                },
                "State": {
                    "description": "State",
                    "type": "string",
                    "readOnly": true
                },
                "StartTime": {
                    "format": "date-time",
                    "description": "StartTime",
                    "type": "string",
                    "readOnly": true
                },
                "EndTime": {
                    "format": "date-time",
                    "description": "EndTime",
                    "type": "string",
                    "readOnly": true
                },
                "ErrorCode": {
                    "format": "int64",
                    "description": "Error Code",
                    "type": "integer",
                    "readOnly": true
                },
                "ErrorDescription": {
                    "description": "Error Description",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceInstanceId": {
                    "format": "uuid",
                    "description": "Service Instance Id",
                    "type": "string",
                    "readOnly": true
                },
                "AssemblyName": {
                    "description": "Assembly Name",
                    "type": "string",
                    "readOnly": true
                },
                "AssemblyVersion": {
                    "description": "Assembly Version",
                    "type": "string",
                    "readOnly": true
                },
                "DeploymentTime": {
                    "format": "date-time",
                    "description": "Deployment Time",
                    "type": "string",
                    "readOnly": true
                },
                "Duration": {
                    "format": "int32",
                    "description": "Duration",
                    "type": "integer",
                    "readOnly": true
                },
                "ServiceClassId": {
                    "format": "uuid",
                    "description": "Service Class Id",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceId": {
                    "format": "uuid",
                    "description": "Service Id",
                    "type": "string",
                    "readOnly": true
                },
                "ServiceVersionId": {
                    "format": "uuid",
                    "description": "Service Version Id",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TransactionSet": {
            "description": "The transaction set.",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string",
                    "readOnly": true
                },
                "AckStatusCode": {
                    "description": "Ack Status Code",
                    "type": "string",
                    "readOnly": true
                },
                "AgreementName": {
                    "description": "Agreement Name",
                    "type": "string",
                    "readOnly": true
                },
                "ApplicationReceiver": {
                    "description": "Application Receiver",
                    "type": "string",
                    "readOnly": true
                },
                "ApplicationSender": {
                    "description": "Application Sender",
                    "type": "string",
                    "readOnly": true
                },
                "Direction": {
                    "description": "Direction",
                    "type": "string",
                    "readOnly": true
                },
                "DocType": {
                    "description": "Document type",
                    "type": "string",
                    "readOnly": true
                },
                "GroupControlNo": {
                    "description": "Group Control Number",
                    "type": "string",
                    "readOnly": true
                },
                "GroupDateTime": {
                    "format": "date-time",
                    "description": "Group DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeControlNo": {
                    "description": "Interchange Control Number",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeDateTime": {
                    "format": "date-time",
                    "description": "Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "MessageContentKey": {
                    "description": "Message Content Key",
                    "type": "string",
                    "readOnly": true
                },
                "ProcessingDateTime": {
                    "format": "date-time",
                    "description": "Processing DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "ReceiverPartyAlias": {
                    "description": "Receiver Party Alias",
                    "type": "string",
                    "readOnly": true
                },
                "SenderPartyAlias": {
                    "description": "Sender Party Alias",
                    "type": "string",
                    "readOnly": true
                },
                "TransactionSetControlNo": {
                    "description": "TransactionSet Control Number",
                    "type": "string",
                    "readOnly": true
                },
                "TransactionSetId": {
                    "description": "TransactionSet Id",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TransactionSetAggregationReport": {
            "description": "The transaction set aggregation report.",
            "type": "object",
            "properties": {
                "AgreementName": {
                    "description": "Agreement Name",
                    "type": "string",
                    "readOnly": true
                },
                "Direction": {
                    "description": "Direction",
                    "type": "string",
                    "readOnly": true
                },
                "Id": {
                    "description": "Id",
                    "type": "string",
                    "readOnly": true
                },
                "MaxInterchangeDateTime": {
                    "format": "date-time",
                    "description": "Max Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "MinInterchangeDateTime": {
                    "format": "date-time",
                    "description": "Min Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "ReceiverPartyName": {
                    "description": "Receiver Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "SenderPartyName": {
                    "description": "Sender Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "TransactionSetCount": {
                    "format": "int32",
                    "description": "TransactionSet Count",
                    "type": "integer",
                    "readOnly": true
                },
                "TransactionSetId": {
                    "description": "TransactionSet Id",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "InterchangeStatusRecord": {
            "description": "InterchangeStatusRecord",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "ReceiverPartyName": {
                    "description": "Receiver Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "SenderPartyName": {
                    "description": "Sender Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "ReceiverPartyAlias": {
                    "description": "Receiver Party Alias",
                    "type": "string",
                    "readOnly": true
                },
                "SenderPartyAlias": {
                    "description": "Sender Party Alias",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeControlNo": {
                    "description": "Interchange Control number",
                    "type": "string",
                    "readOnly": true
                },
                "Direction": {
                    "description": "Direction",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeDateTime": {
                    "format": "date-time",
                    "description": "Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "EdiMessageType": {
                    "description": "Edi Message Type",
                    "type": "string",
                    "readOnly": true
                },
                "IsaStatusCode": {
                    "description": "IsaStatusCode",
                    "type": "string",
                    "readOnly": true
                },
                "GroupCount": {
                    "description": "Group Count",
                    "type": "object",
                    "readOnly": true
                },
                "PortID": {
                    "description": "Port Id",
                    "type": "object",
                    "readOnly": true
                },
                "TsCorrelationId": {
                    "description": "Ts CorrelationId",
                    "type": "object",
                    "readOnly": true
                },
                "AgreementName": {
                    "description": "Agreement Name",
                    "type": "object",
                    "readOnly": true
                }
            }
        },
        "InterchangeAggregationRecord": {
            "description": "InterchangeAggregationRecord",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name",
                    "type": "string"
                },
                "InterchangeCount": {
                    "format": "int32",
                    "description": "Interchange Count",
                    "type": "integer",
                    "readOnly": true
                },
                "SenderPartyName": {
                    "description": "Sender Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "ReceiverPartyName": {
                    "description": "Receiver Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "Direction": {
                    "description": "Direction",
                    "type": "string",
                    "readOnly": true
                },
                "MinInterchangeDateTime": {
                    "format": "date-time",
                    "description": "Min Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "MaxInterchangeDateTime": {
                    "format": "date-time",
                    "description": "Max Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "EdiEncodingType": {
                    "description": "Edi Encoding Type",
                    "type": "string",
                    "readOnly": true
                },
                "AgreementName": {
                    "description": "Agreement Name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AS2StatusRecord": {
            "description": "AS2 status record",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "AgreementName": {
                    "description": "Agreement Name",
                    "type": "string",
                    "readOnly": true
                },
                "AS2From": {
                    "description": "AS2 From",
                    "type": "string",
                    "readOnly": true
                },
                "AS2PartyRole": {
                    "description": "AS2 Party Role",
                    "type": "string",
                    "readOnly": true
                },
                "AS2To": {
                    "description": "AS2 To",
                    "type": "string",
                    "readOnly": true
                },
                "DaysToCheckDuplicate": {
                    "description": "Days To Check Duplicate",
                    "type": "string",
                    "readOnly": true
                },
                "Filename": {
                    "description": "File name",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeControlNo": {
                    "description": "Interchange Control Number",
                    "type": "string",
                    "readOnly": true
                },
                "IsAS2MessageDuplicate": {
                    "description": "Is AS2 Message Duplicate",
                    "type": "string",
                    "readOnly": true
                },
                "IsReliableMessagingEnabled": {
                    "description": "Is Reliable Messaging Enabled",
                    "type": "string",
                    "readOnly": true
                },
                "MdnProcessingStatus": {
                    "description": "Mdn Processing Status",
                    "type": "string",
                    "readOnly": true
                },
                "MessageDateTime": {
                    "format": "date-time",
                    "description": "Message Date Time",
                    "type": "string",
                    "readOnly": true
                },
                "MessageEncryptionType": {
                    "description": "Message Encryption Type",
                    "type": "string",
                    "readOnly": true
                },
                "MessageID": {
                    "description": "Message ID",
                    "type": "string",
                    "readOnly": true
                },
                "MessageSignatureType": {
                    "description": "Message Signature Type",
                    "type": "string",
                    "readOnly": true
                },
                "ReceiverPartyName": {
                    "description": "Receiver Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "SenderPartyName": {
                    "description": "Sender Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "TimeCreated": {
                    "format": "date-time",
                    "description": "Creation time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Batch": {
            "description": "Batch",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "BatchStatus": {
                    "description": "Batch Status",
                    "type": "string",
                    "readOnly": true
                },
                "BatchName": {
                    "description": "Batch Name",
                    "type": "string",
                    "readOnly": true
                },
                "DestinationPartyName": {
                    "description": "Destination Party Name",
                    "type": "string",
                    "readOnly": true
                },
                "ActivationTime": {
                    "format": "date-time",
                    "description": "Activation Time",
                    "type": "string",
                    "readOnly": true
                },
                "BatchOccurrenceCount": {
                    "format": "int64",
                    "description": "Batch Occurrence Count",
                    "type": "integer",
                    "readOnly": true
                },
                "EdiEncodingType": {
                    "description": "Edi Encoding Type",
                    "type": "string",
                    "readOnly": true
                },
                "BatchType": {
                    "description": "Batch Type",
                    "type": "string",
                    "readOnly": true
                },
                "BatchTarget": {
                    "description": "Batch Target",
                    "type": "string",
                    "readOnly": true
                },
                "BatchElementCount": {
                    "format": "int32",
                    "description": "Batch Element Count",
                    "type": "integer",
                    "readOnly": true
                },
                "RejectedBatchElementCount": {
                    "format": "int32",
                    "description": "Rejected Batch Element Count",
                    "type": "integer",
                    "readOnly": true
                },
                "BatchSize": {
                    "description": "Batch Size",
                    "type": "string",
                    "readOnly": true
                },
                "LastBatchAction": {
                    "description": "Last Batch Action",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeControlNo": {
                    "description": "Interchange Control Number",
                    "type": "string",
                    "readOnly": true
                },
                "InterchangeDateTime": {
                    "format": "date-time",
                    "description": "Interchange DateTime",
                    "type": "string",
                    "readOnly": true
                },
                "AgreementName": {
                    "description": "Agreement Name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Orchestration": {
            "description": "Model representing Orchestration",
            "type": "object",
            "properties": {
                "FullName": {
                    "description": "Orchestration Name",
                    "type": "string"
                },
                "AssemblyName": {
                    "description": "Assembly Name",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application Name",
                    "type": "string"
                },
                "Description": {
                    "description": "Description",
                    "type": "string"
                },
                "Status": {
                    "description": "Status",
                    "type": "string"
                },
                "Host": {
                    "description": "Host Name",
                    "type": "string"
                },
                "InboundPorts": {
                    "description": "Inbound Ports",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrchestrationInboundPort"
                    }
                },
                "OutboundPorts": {
                    "description": "Outbound Ports",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrchestrationOutboundPort"
                    }
                },
                "UsedRoles": {
                    "description": "Used Roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ImplementedRoles": {
                    "description": "Implemented Roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "InvokedOrchestrations": {
                    "description": "Invoked Orchestrations",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Tracking": {
                    "$ref": "#/definitions/OrchestrationTrackingOptions",
                    "description": "Tracking Options"
                }
            }
        },
        "OrchestrationInboundPort": {
            "description": "Model representing an Inbound Port",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Port Name",
                    "type": "string"
                },
                "Binding": {
                    "description": "Port Binding Type",
                    "type": "string"
                },
                "ReceivePort": {
                    "description": "Physical Receive Port bound to Port",
                    "type": "string"
                },
                "PortType": {
                    "description": "Port Type",
                    "type": "string"
                }
            }
        },
        "OrchestrationOutboundPort": {
            "description": "Model representing an Outbound Port",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Port Name",
                    "type": "string"
                },
                "Binding": {
                    "description": "Port Binding Type",
                    "type": "string"
                },
                "SendPort": {
                    "description": "Physical SendPort bound to Port",
                    "type": "string"
                },
                "SendPortGroup": {
                    "description": "Physical SendPortGroup bound to Port",
                    "type": "string"
                },
                "PortType": {
                    "description": "Port Type",
                    "type": "string"
                }
            }
        },
        "OrchestrationTrackingOptions": {
            "description": "Model representing Tracking Options for Orchestration",
            "type": "object",
            "properties": {
                "ServiceStartEnd": {
                    "description": "Service Start End",
                    "type": "boolean"
                },
                "MessageSendReceive": {
                    "description": "Message Send Receive",
                    "type": "boolean"
                },
                "InboundMessageBody": {
                    "description": "Inbound Message Body",
                    "type": "boolean"
                },
                "OutboundMessageBody": {
                    "description": "Outbound Message Body",
                    "type": "boolean"
                },
                "OrchestartionEvents": {
                    "description": "Orchestration Events",
                    "type": "boolean"
                },
                "TrackPropertiesForIncomingMessages": {
                    "description": "Track Properties for Incoming Messages",
                    "type": "boolean"
                },
                "TrackPropertiesForOutgoingMessages": {
                    "description": "Track Properties for Outgoing Messages",
                    "type": "boolean"
                }
            }
        },
        "Party": {
            "description": "Model for Party",
            "type": "object",
            "properties": {
                "Id": {
                    "format": "int32",
                    "description": "Gets or sets the id.",
                    "type": "integer"
                },
                "Name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "Description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "IsHostPartner": {
                    "description": "Gets or sets a value indicating whether party is a host partner.",
                    "type": "boolean"
                },
                "CertificateName": {
                    "description": "Gets or sets the certificate name.",
                    "type": "string"
                },
                "CertificateThumbprint": {
                    "description": "Gets or sets the certificate thumbprint.",
                    "type": "string"
                },
                "SendPortNames": {
                    "description": "Gets or sets the send port names.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Aliases": {
                    "description": "Party alias",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PartyAlias"
                    }
                },
                "BusinessProfiles": {
                    "description": "Gets or sets the business profile names.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CustomSettings": {
                    "description": "Gets or sets the custom settings.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomSetting"
                    }
                }
            }
        },
        "PartyAlias": {
            "description": "The party alias.",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name",
                    "type": "string"
                },
                "Qualifier": {
                    "description": "Qualifier",
                    "type": "string"
                },
                "Value": {
                    "description": "Value",
                    "type": "string"
                },
                "IsAutoCreated": {
                    "description": "If auto created",
                    "type": "boolean"
                }
            }
        },
        "Pipeline": {
            "description": "Model for Pipeline",
            "type": "object",
            "properties": {
                "FullName": {
                    "description": "Full Name of Pipeline",
                    "type": "string"
                },
                "AssemblyQualifiedName": {
                    "description": "Assembly Qualified Name of Pipeline",
                    "type": "string"
                },
                "Type": {
                    "description": "Type of Pipeline (Send/Receive/Transform etc.)",
                    "type": "string"
                },
                "BtsAssembly": {
                    "description": "BTS Assembly Name of Pipeline",
                    "type": "string"
                },
                "Application": {
                    "description": "Name of the Application to which the Pipeline belongs",
                    "type": "string"
                },
                "Description": {
                    "description": "Description of the Pipeline",
                    "type": "string"
                },
                "Tracking": {
                    "$ref": "#/definitions/PipelineTracking",
                    "description": "Tracking Properties of the Pipeline"
                }
            }
        },
        "PipelineTracking": {
            "description": "Tracking Options for Pipeline",
            "type": "object",
            "properties": {
                "ServiceStartEnd": {
                    "description": "Port Start and End Events",
                    "type": "boolean"
                },
                "MessageSendReceive": {
                    "description": "Message Send and Receive Events",
                    "type": "boolean"
                },
                "InboundMessageBody": {
                    "description": "Message before Pipeline Processing",
                    "type": "boolean"
                },
                "OutboundMessageBody": {
                    "description": "Message after Pipeline Processing",
                    "type": "boolean"
                }
            }
        },
        "Policy": {
            "description": "Policy model",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the Policy.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application to which policy deployed",
                    "type": "string"
                },
                "MajorRevision": {
                    "format": "int32",
                    "description": "Major revision number",
                    "type": "integer"
                },
                "MinorRevision": {
                    "format": "int32",
                    "description": "Minor revision number",
                    "type": "integer"
                },
                "Status": {
                    "description": "Policy status",
                    "type": "string"
                }
            }
        },
        "ProtocolType": {
            "description": "The protocol type.",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Adapter Name",
                    "type": "string"
                },
                "Capabilities": {
                    "description": "Capabilities of adapter",
                    "type": "string"
                },
                "DefaultSendHandler": {
                    "description": "Default send handler name",
                    "type": "string"
                }
            }
        },
        "ReceiveLocation": {
            "description": "Receive location model",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the receive location.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description for the receive location.",
                    "type": "string"
                },
                "ReceivePortName": {
                    "description": "Receive port name to which this receive location belongs to",
                    "type": "string"
                },
                "Enable": {
                    "description": "Status of the receive location.",
                    "type": "boolean"
                },
                "IsPrimary": {
                    "description": "Determines whether the receive location is primary receive location of the receive port",
                    "type": "boolean"
                },
                "Address": {
                    "description": "Address property for the adapter.",
                    "type": "string"
                },
                "PublicAddress": {
                    "description": "Public Address property for the adapter.",
                    "type": "string"
                },
                "TransportType": {
                    "description": "Protocol for the adapter.",
                    "type": "string"
                },
                "TransportTypeData": {
                    "description": "Configuration specific to the adapter.",
                    "type": "string"
                },
                "ReceiveHandler": {
                    "description": "Receive handler for this receive location.",
                    "type": "string"
                },
                "CustomData": {
                    "description": "Custom data",
                    "type": "string"
                },
                "ReceivePipeline": {
                    "description": "Receive pipeline used to receive a response when a message is sent out through this receive location.",
                    "type": "string"
                },
                "ReceivePipelineData": {
                    "description": "Custom configuration of receive pipeline specific to this instance of the usage of the pipeline.",
                    "type": "string"
                },
                "SendPipeline": {
                    "description": "Send pipeline used to send data sent through this receive location.",
                    "type": "string"
                },
                "SendPipelineData": {
                    "description": "Custom configuration of send pipeline specific to this instance of the usage of the pipeline.",
                    "type": "string"
                },
                "Schedule": {
                    "$ref": "#/definitions/ReceiveLocationSchedule",
                    "description": "Service window"
                },
                "EncryptionCert": {
                    "$ref": "#/definitions/CertificateInfo",
                    "description": "Encryption certificate that is used to encrypt data sent through this port."
                },
                "FragmentMessages": {
                    "description": "Field to fragment messages",
                    "type": "string"
                }
            }
        },
        "ReceiveLocationSchedule": {
            "description": "Service window",
            "type": "object",
            "properties": {
                "StartDate": {
                    "format": "date-time",
                    "description": "Start date of the service window",
                    "type": "string"
                },
                "StartDateEnabled": {
                    "description": "Flag indicating if start date of the service window is enabled.",
                    "type": "boolean"
                },
                "EndDate": {
                    "format": "date-time",
                    "description": "End date of the service window",
                    "type": "string"
                },
                "EndDateEnabled": {
                    "description": "Flag indicating if end date of the service window is enabled.",
                    "type": "boolean"
                },
                "ServiceWindowEnabled": {
                    "description": "Flag that specifies whether the service window is enabled.",
                    "type": "boolean"
                },
                "FromTime": {
                    "format": "date-time",
                    "description": "Start time for the service window.",
                    "type": "string"
                },
                "ToTime": {
                    "format": "date-time",
                    "description": "End time for the service window.",
                    "type": "string"
                }
            }
        },
        "CertificateInfo": {
            "description": "Encryption certificate",
            "type": "object",
            "properties": {
                "CommonName": {
                    "description": "Common Name",
                    "type": "string"
                },
                "Thumbprint": {
                    "description": "Thumbprint of the certificate.",
                    "type": "string"
                }
            }
        },
        "ReceivePort": {
            "description": "Model for Receive port",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the receive port.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description for the receive port.",
                    "type": "string"
                },
                "IsTwoWay": {
                    "description": "Determines whether the port is two-way",
                    "type": "boolean"
                },
                "ApplicationName": {
                    "description": "Application name to which receive port belongs to",
                    "type": "string"
                },
                "CustomData": {
                    "description": "Custom data",
                    "type": "string"
                },
                "InboundTransforms": {
                    "description": "Collection of inbound transforms of receive port",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "OutboundTransforms": {
                    "description": "Collection of outbound transforms of a two-way receive port",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Tracking": {
                    "$ref": "#/definitions/Tracking",
                    "description": "Desired level of document tracking for the receive port."
                },
                "ReceiveLocations": {
                    "description": "List of receive locations of the receive port",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PrimaryReceiveLocation": {
                    "description": "Primary receive location name",
                    "type": "string"
                }
            }
        },
        "Tracking": {
            "description": "Port tracking details",
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/definitions/MessageBodyTracking",
                    "description": "Message body tracking"
                },
                "Property": {
                    "$ref": "#/definitions/MessagePropertyTracking",
                    "description": "Message property tracking"
                }
            }
        },
        "MessageBodyTracking": {
            "description": "Message body tracking",
            "type": "object",
            "properties": {
                "BeforeSendPipeline": {
                    "description": "Flag indicating whether body to be tracked before port processing of request message",
                    "type": "boolean"
                },
                "AfterSendPipeline": {
                    "description": "Flag indicating whether body to be tracked after port processing of request message",
                    "type": "boolean"
                },
                "BeforeReceivePipeline": {
                    "description": "Flag indicating whether body to be tracked before port processing of response message",
                    "type": "boolean"
                },
                "AfterReceivePipeline": {
                    "description": "Flag indicating whether body to be tracked after port processing of response message",
                    "type": "boolean"
                }
            }
        },
        "MessagePropertyTracking": {
            "description": "Message Property Tracking",
            "type": "object",
            "properties": {
                "BeforeSendPipeline": {
                    "description": "Flag indicating whether body to be tracked before port processing of request message",
                    "type": "boolean"
                },
                "AfterSendPipeline": {
                    "description": "Flag indicating whether body to be tracked after port processing of request message",
                    "type": "boolean"
                },
                "BeforeReceivePipeline": {
                    "description": "Flag indicating whether body to be tracked before port processing of response message",
                    "type": "boolean"
                },
                "AfterReceivePipeline": {
                    "description": "Flag indicating whether body to be tracked after port processing of response message",
                    "type": "boolean"
                }
            }
        },
        "Resource": {
            "description": "Class Representing Resource (Assembly/Script/Binding etc.)",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the Resource",
                    "type": "string"
                },
                "Type": {
                    "description": "Type of Resource",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Name of the application",
                    "type": "string"
                }
            }
        },
        "RoleLink": {
            "description": "Model for Role",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the role link.",
                    "type": "string"
                },
                "ServiceLinkType": {
                    "description": "Service link type",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application Name",
                    "type": "string"
                },
                "AssemblyName": {
                    "description": "Assembly name",
                    "type": "string"
                },
                "EnlistedParties": {
                    "description": "List of enlisted parties",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnlistedParty"
                    }
                }
            }
        },
        "EnlistedParty": {
            "description": "The enlisted party.",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of party",
                    "type": "string"
                },
                "Mappings": {
                    "description": "Port mappings",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnlistedPartyMapping"
                    }
                }
            }
        },
        "EnlistedPartyMapping": {
            "description": "The enlisted party mapping.",
            "type": "object",
            "properties": {
                "PortTypeName": {
                    "description": "Port type Name",
                    "type": "string"
                },
                "OperationName": {
                    "description": "Operation name",
                    "type": "string"
                },
                "SendPort": {
                    "description": "Sendport bound to the party",
                    "type": "string"
                }
            }
        },
        "Schema": {
            "description": "Model for BTSchema",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Schema Name",
                    "type": "string"
                },
                "TargetNameSpace": {
                    "description": "Target Namespace",
                    "type": "string"
                },
                "RootName": {
                    "description": "Root Name",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application Name",
                    "type": "string"
                },
                "AssemblyName": {
                    "description": "Assembly Name",
                    "type": "string"
                },
                "SchemaType": {
                    "description": "Schema Type",
                    "type": "string"
                },
                "Description": {
                    "description": "Schema Description",
                    "type": "string"
                },
                "Tracking": {
                    "$ref": "#/definitions/SchemaTracking",
                    "description": "Tracking Options for Schema"
                }
            }
        },
        "SchemaTracking": {
            "description": "Schema Tracking Model",
            "type": "object",
            "properties": {
                "TrackedProperties": {
                    "description": "List of all Tracked Properties",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SchemaTrackingProperty"
                    }
                }
            }
        },
        "SchemaTrackingProperty": {
            "description": "BT Schema Tracking Property Model",
            "type": "object",
            "properties": {
                "PropertyName": {
                    "description": "Tracking Property Name",
                    "type": "string"
                },
                "TrackingEnabled": {
                    "description": "Indicates if specific Tracking Property is enabled",
                    "type": "boolean"
                }
            }
        },
        "SendPortGroup": {
            "description": "Model for SendPortGroup",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the SendPortGroup",
                    "type": "string"
                },
                "SendPorts": {
                    "description": "List of SendPorts in the group",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CustomData": {
                    "description": "Custom Data",
                    "type": "string"
                },
                "Filter": {
                    "description": "Filter",
                    "type": "string"
                },
                "Status": {
                    "description": "Port Status",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application Name",
                    "type": "string"
                },
                "Description": {
                    "description": "Description",
                    "type": "string"
                }
            }
        },
        "SendPort": {
            "description": "Model for Send port",
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name of the send port.",
                    "type": "string"
                },
                "Description": {
                    "description": "Description for the send port.",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application name to which sendport belongs to",
                    "type": "string"
                },
                "IsDynamic": {
                    "description": "Whether the send port is dynamic or static",
                    "type": "boolean"
                },
                "IsTwoWay": {
                    "description": "Determines whether the port is two-way",
                    "type": "boolean"
                },
                "Status": {
                    "description": "Status of the send port.",
                    "type": "string"
                },
                "CustomData": {
                    "description": "Custom data",
                    "type": "string"
                },
                "PrimaryTransport": {
                    "$ref": "#/definitions/TransportInfo",
                    "description": "Primary transport information"
                },
                "SecondaryTransport": {
                    "$ref": "#/definitions/TransportInfo",
                    "description": "Secondary transport of the static send port."
                },
                "SendPipeline": {
                    "description": "Send pipeline used to send data sent through this port.",
                    "type": "string"
                },
                "SendPipelineData": {
                    "description": "Custom configuration specific to this instance of the usage of the pipeline.",
                    "type": "string"
                },
                "ReceivePipeline": {
                    "description": "Receive pipeline used to receive a response when a message is sent out through this port.",
                    "type": "string"
                },
                "ReceivePipelineData": {
                    "description": "Custom configuration information specific to the current instance of the receive pipeline.",
                    "type": "string"
                },
                "InboundTransforms": {
                    "description": "Collection of inbound transforms of two-way send port",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "OutboundTransforms": {
                    "description": "Collection of outbound transforms of send port",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Tracking": {
                    "$ref": "#/definitions/Tracking",
                    "description": "Desired level of document tracking for the send port."
                },
                "EncryptionCert": {
                    "$ref": "#/definitions/CertificateInfo",
                    "description": "Encryption certificate that is used to encrypt data sent through this port."
                },
                "Filter": {
                    "description": "Optional filter expression used for this send port.",
                    "type": "string"
                },
                "Priority": {
                    "format": "int32",
                    "description": "Priority of the send port.",
                    "type": "integer"
                },
                "RouteFailedMessage": {
                    "description": "Gets or sets a value indicating whether or not failed messages are routed to failed message subscribers.",
                    "type": "boolean"
                },
                "OrderedDelivery": {
                    "description": "Flag specifying whether or not the send port orders the delivery of messages.",
                    "type": "boolean"
                },
                "StopSendingOnFailure": {
                    "description": "Flag indicating whether or not the send port stops sending messages on a failure.",
                    "type": "boolean"
                }
            }
        },
        "TransportInfo": {
            "description": "The transport info.",
            "type": "object",
            "properties": {
                "Address": {
                    "description": "Address property for the adapter.",
                    "type": "string"
                },
                "TransportType": {
                    "description": "Protocol for the adapter.",
                    "type": "string"
                },
                "TransportTypeData": {
                    "description": "Configuration specific to the adapter.",
                    "type": "string"
                },
                "SendHandler": {
                    "description": "Send handler for this transport.",
                    "type": "string"
                },
                "RetryCount": {
                    "format": "int32",
                    "description": "Retry count for the adapter.",
                    "type": "integer"
                },
                "RetryInterval": {
                    "format": "int32",
                    "description": "Retry interval for the adapter.",
                    "type": "integer"
                },
                "OrderedDelivery": {
                    "description": "Flag that specifies whether the BizTalk Message Queuing adapter supports ordered delivery.",
                    "type": "boolean"
                },
                "Schedule": {
                    "$ref": "#/definitions/Schedule",
                    "description": "Service window"
                }
            }
        },
        "Schedule": {
            "description": "Service window",
            "type": "object",
            "properties": {
                "ServiceWindowEnabled": {
                    "description": "Flag that specifies whether the service window is enabled.",
                    "type": "boolean"
                },
                "FromTime": {
                    "format": "date-time",
                    "description": "Start time for the service window.",
                    "type": "string"
                },
                "ToTime": {
                    "format": "date-time",
                    "description": "End time for the service window.",
                    "type": "string"
                }
            }
        },
        "Transform": {
            "description": "Model for transform",
            "type": "object",
            "properties": {
                "FullName": {
                    "description": "Name of the transform",
                    "type": "string"
                },
                "ApplicationName": {
                    "description": "Application name of the transform",
                    "type": "string"
                },
                "Description": {
                    "description": "Transform description",
                    "type": "string"
                },
                "Assembly": {
                    "description": "Transform assembly",
                    "type": "string"
                },
                "SourceSchema": {
                    "description": "Transform source schema",
                    "type": "string"
                },
                "TargetSchema": {
                    "description": "Transform target schema",
                    "type": "string"
                },
                "XmlContent": {
                    "description": "Xml content",
                    "type": "string"
                }
            }
        }
    }
}